%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.33.0 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Linux 4.2.0-42-lowlatency #49-Ubuntu SMP PREEMPT Tue Jun 28 23:12:17 UTC 2016 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 249 253
%%HiResBoundingBox: 0 0 248.4 252.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMUSerifRoman
%!FontType1-1.0: CMUSerifRoman
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2006 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2006 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman Regular) readonly def
/FamilyName (Nimbus Roman) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMUSerifRoman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-9 -217 775 688] readonly def
/StrokeWidth 0 def
/UniqueID 5082812 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /minus put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 68 /D put
dup 71 /G put
dup 73 /I put
dup 80 /P put
dup 83 /S put
dup 92 /backslash put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F88E0E90C57EC003CFF45554C63978A4457910ACCCBDB199AE01D3A5CC868F4B
822F86C8BEBF268A62A74B74B7BB3BB731E3098EBB936E540471387BC93EBC24
731A8FD551B73BB61F5470D5B804CCE0D897C3F8651422B30EBF8D82BF962DDA
BF33C897A6ACD27770FAA07EB13C67191297413C15F11F22612AB3189B5B27D9
5F8A0A4724E98A018EABBEEE4BF0F4D8E1F282C280B5735411CB2C6626302A4C
21E1D370912CDF61ED23E57916DE9C02A00E3C4B30F957F526C3FAD461933B6E
FA765140C78EF120DDAE516DBB599526395BC827996B5FA9E044FD63F3A3B6DB
47173DCF71DA1E9B09EBF5BDCADA1FC7BE9B91B54F75B5B8EE729C403914B806
31DED09E6B8ECFBD1DEFB1953ECB1E41C94C45CC9BFD50F537892C97CB977328
E9BA77E790AD06D77A20313F86A43F47EBAD6AE4BE8E88E91867A099A8C78D64
411A08E84016C7011D04B213060697451A5995B7D0F6FF624130D7B500B4F6A0
8C0F341D84C36192FFD3E105F7443D4332E044E6346EE62B102EAB781C36AF91
1F33C7829A669FAE4D15106C787D9127B3CC6693F7944E803CE696BF3AEFBB7A
8BE3C7CFDCD09D965E457D4CCE72406C657EF87F32EF11DF4719DD105B797682
699CF87C1D9100E5398B88EC2DE943AF487021A3E5B86AB2AF808377E8FC0AD2
42E7A14D5009285FF8E67BE18D8B723984E27D4F8E642E8FD9868A3207B66DD1
006DDAAEDD8044F53F90A3064BEC412ADB897C000E0844F55743CF16E12D6EDE
5F4E0E62DC34C6A58447101746D83A2628F9A9CEB4FBA675104A90F85B20173C
1799800199A69DADC8933B78B6A83DD02A7A3CCA8DD7459A686AFCAD9EA0DBB2
7F883111D6B2674994E765C5D4B0C50EB3E96AB15C00613A9D067039074C47FF
F545EBE264F255F0A7D36B682F988FA84E40EA4AE233EA679D9459D1C24B9219
F58F7974EA4EBE52F6A3063BB22D6BBDB99D3DC5F30411A47072A10E6014496F
D38F65373103E805A2406E6EAE470868EA77EE6010A51BE9F674D3E2E832CECC
8CE592DD276E07410CE0EF4EB215B8058B5B2751EB1B44CC14159B4D347D51AD
6AB3E3772C891BF20E3BA3698C64A20137E4CB69D33BF0D43E08C95BAB99FCD5
F770A427FCC91D5D0FE27B99C1BCC01ABBE71F238762FD088C477E29DA1E8470
8C9A957D743DE4E779AFF411B028A9AAE197F297AEE4C639512F33D88E3D923A
869B1F786E643C8CDA6AC960EA101C44357A8872FD6222671203A3A8EA84E9A4
A7F0DA1F828C48669AF4907FE9E08613D3FC15383192063F507183B535B01370
B10DA229DAF4E2440D22B07924921B3E5993734ACDCF1801786122C52C8825CA
DD75A755F880B51BA91DBB595F8FC0E992B02387BCBE113FAA3B71E9DB929598
DD79537F70D9784B578CC164E1F964F71818F401CB568A8197DDA6344FB33E94
F2E5C4E4E44C6832305CC312A0C60A044B05926F582A6781B5A526619E1EF281
7960F33C9337E272A4688F94F4C146A8F5F0DC201B51E1AF56E9D22D2064DB94
4BCBBE0085A191DD5FA291CDF5DC7FEB7DDEA918B197117F85AD577721E17422
EC209E180F7DE6C9B18545C13C4EDBB0D934761B98D1E3B0D0159748DFB6D8B8
E5933BEC0FACBE2AF1DA19F473EEC8ECDE0218543F4162054C2B851C5B7F3F5D
5ADC5F6C941FB6C294C79E2B2FAF0CC5D3E5B303531565392B4DD12EA52E1B68
70D1DE4B28031B076337FAC3B089FA7D1DB5161718BE69D3D11AE3BB7348768E
B7DC231F62661AF8BFD542F4B0DA634533E17ABB0D8FB6DACBA673316489FF0B
C91E7680E3ADC0202EDB6F368003EFB16CDA61384DE611BB138786B266342A63
8229415491BD2512A698B6AAFFED306A4BD0F942C79C81A6D5923852A9973B87
76B28FD5115AFF1AA8689DE10454A29501DF9B185961BDD456E676E7B291D6D5
05B70D44E22C220B481FDB76A388145B429CC62D15FDDBAA05AF278843222945
AD53E812F00E8F4EB5E8A334C9BECC60CB9B6C91D03260182EC4DEFE000DAE77
E21F1E4CAEFC381E215C3E02F12950B85EC5732C74FB111ADAC85476E26C4396
674E9F56B4F631FEBC09CC878CBD952D6E93CB351CDA8E584D46F918C08B0778
5FA5D7B5C276DA190FE57C493A8C21D290DC153C4F2CACC65D4852E1CAE0BA93
6D4D1DFD4C7149628C466D7C33558C9A3EC24A286F3C92AC60DF4F8DF8D82D52
6248E318A3996924A6770C2423DDE96E48FB04B04D9C1917343A2779BA6C2997
6E209EDCD84723078DBBE5DAB5364EAE802D0B75DF6FACF79162C8BAC98E586B
C732B403D08FDD134FDEDEBB9FE72CD710F438C5B934CFE751C70D40544D1970
45F1F5BAD78685417C16A5C860DE050138B0F639FB66D744271956CA2B66D266
D9DEA4FF1BC4E3E018E97B1E92271BE8964E08C648709779FBD18FE4912B68C9
3D71DBF373E2EE201AEC42EF36B57EFA5555504CBDCDCF9AD6D288E8CD3FCBF7
3DEB8670AE8AF62251D4338D8CC04BB2177B63A8DB3744E8BB695E2FB188E7D7
87A8A22357741A47F24B09743FE62BB23DA9FD72E2959D23A2A1B77BAFFA7C19
91CE0539946B79D2C4CEFD698B14B2C5DA86FAC49A4346DC3DD61CC9127EA34B
6CD5CB3FDBD70391A66B7CE179DA636CA62E4D26BC8C5B9464825F912DFDC70A
75CE3DE56BDBE3DB7A1B2AAC1BCF76943927EAB93CBE5E057F0E4E8D34AF4ADA
F9F088CC34139FA658BDA2280CB900B42266FD0EDDECCF2967F5141C5796EBCB
28AFCEBDFC886EB856835EBE5BF2C66CF60B63C1FEE3DCAB8F35C063E3604C48
BA4A0A29849C3A4D039056032CFCB6CC5C7C3CFA471BCFA713629E18A626D7DC
D6ED20DB93BDC71D83113D2E6174E4A05341A77A47E2B43520E6B737B61D9CF6
E434A25AF408297D67A103CD1C968F0B9E15AEF6D9CE48207BD86497F5FC5DC0
E4E8AB70C4917016DFD488C3712579DC126E35195A2BFE6D4C8C5CA0C4ABC566
15847CB690683FCBFADEBEABE267FBF798E7843F4B2821FB5A2F6FF2E8D5E0F3
8F5389D31BA1F1504FFA2EE6F7694198FADB7615F5DE3AE322433210AF7DA5A7
4615BB58E21507EE844F9D8D4B6AA442EB17C857E40754E13983A46A2AF9EFB9
E1E80DF82D71FE4C7100B70D0BFC1C62E620C2452C7FF42066E94B3BA310A6F4
BCA855C7D8EE92435525FF6D57287296995D3D309745A34605C0657B7FCD1648
007EC9B5B1B90F47F133ED3D92CE1928AC6219DE4ABE9CD4DAF276610E63D7CE
B1AD329ABE6C920AADEDAACF3D0F17FC75DBBD04367F2E231D3883AC4C9620EC
711EA6FC967F8E583A70E0858A5A7ABE67DC8E0356F6C5F06DE14BF960F19FF1
2C950EFC821B503DC6CFA943BE433E14E09CC2841876A0646637C25F957719E4
F24C0408132193EC004E100603885F26C9F93C8613B0B148F2984901A5D5534B
7A77F5CABA01B61C728AD2B743B696AA32E70647CB581ACB2688EA7CC860E51D
7DA97FE70C2CC4971CD54FCA8166F0F294D83E2ABFE74900A06E9F04D123ABA0
853DB0C5750856BBFAABC2AB917E1F6F0E0BE5364F59283A805BB6F6D8D0AA25
90BEB9380129C021D6F750E08DA3B5CB5E456C95AFC3C62CB9FF18AC55682AE2
E1C358EBCB0B64E96ABD158FA7360D5E172D8C23E0B3E7249A41955865D79470
F21BB50DA6AB66DC4C7C63CF1A5238B03E1A9250AFB8FE7749E501BCACECFCEA
30DFB69D77E63C55C0301A34161B22FDA4A872B9B9988FCC2F425A9D8F1E5508
956B75E9135688512C0DFE13557FC75E7B908C2A0646A57A1EBD7F5AAFE7368B
ABAFBCA95B1B1BF8E766AE469F697AEF1557B6E6C4A8F09F0F0AEE679FF99051
B8F0FD6037943069CA61389A463E96F446165E9475E63BF4D559FE21D9BD1A29
096108E0055E1A6A9A30805614069A67080A353ACA09E229A45B4580A0AC5DC6
C21864E926FA25BF8C1CF29C16734AC195A3A3C1151C40026FAEC4B593192C90
48968C6B70C792186E903A02E7DBF21093C72CA0D2E6F024C828EDD8C276DB85
657F03ECA40D8E8E132EC4E0C95C1BBEDC1375AC8364211D9551E59C912C799A
E1B905AD10583CDBF46477E8616170B67822EC26A44D980463208ACBD94A28B0
1ECB8AAD1ACB84F1900579C64A8DE088BB194552FBAD8930223D53ECDA8974C8
432BE0B6065D48260A61B1C62435D9255A01FD2D412396E107B613D6B6F91FEE
A9765203A18CAA5139F9D200555F8A3E6C12F5FE668DECB3A3E8A303F5FA176D
FDB6254E493665FCBB4D1D90964274CCA6B6B837573405F787AD24A2FC54AF7F
50C75C2603D9FF8590BAE4C4488E122723533DFC44CFD755C4221B9976F836E7
97E645E83A60C4B8770E64D09785F9AAB038DDE1A06C820381C103A333506CCB
34C49062D83137A44ED55FA5F1A209FEC89CC24E73BAB19817FF0A5923727F57
DF58322A6758F6A7E75476B5F406DD1598CC5AF7184329454E31BD7A0B4CF367
481A5F55E0ABC22286435CC0EBAE44DF3D16B8268A35323EE3AFB8F4FDD46D2D
32161D78DD256864DD473D580CF489DA84642FDF6C28EF889E565E4FFE5A3C28
7F3B852DECB8A78014E486C23D2B9DC4B063D3BCC71279B7FCD1B96CDE5FCB3E
2FA35B62AA2CEA24856C7CA95B6EEB960AC16572E25583D796A42ACE41F85FB9
A961947005364FB392CCE2F223934B03715DBF2765AACE09D395CA4513621548
C439987F73BC8AB3F52FEE56CC40E94CB1317D0145A34A5AE70D0DF8DD4FE8C9
3DA747B5AC4AB9146C12077A88422F4091513BC024CD4EB35F9359B24FE91EB6
A08CC15EBB92E8047AE2FD1A3FF1CB1A67ABA36CB27D00823A62D9D8F51D2CF2
015E82E14E49A95F84CF43DC1FDB75FE22587E442D0A7D78821C66F926DD71C9
BA50A480B2F9472B271D078E796D4C1FC0EA9F84503F9562E742F983A2FA8AD6
39F922208AC98B5A5E087474A0985104C89702BC8F90CDB19E2BC15949
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CMUSerifRoman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/minus/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 248.4 252.12 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 4595.67 4523.38 re
f
585.668 513.383 1600 2000 re
f*
10 w
1 j
/DeviceGray {} CS
[1] SC
585.668 513.383 1600.002 1999.997 re
S
/DeviceGray {} CS
[0.4663] SC
585.668 513.383 m
2185.67 513.383 l
S
585.668 513.383 m
585.668 2513.38 l
S
585.668 513.383 m
585.668 465.883 l
S
/DeviceGray {} cs
[0.4663] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 29.0668 25.7551] Tm
0 0 Td
/F8_0 20 Tf
(-\\pi/2)
[11.28
0
5.56
0
10
0
5.56
0
5.56
0
10
0] Tj
Q
985.668 513.383 m
985.668 465.883 l
S
1385.67 513.383 m
1385.67 465.883 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 133.567 25.7551] Tm
0 0 Td
/F8_0 20 Tf
(0)
[10
0] Tj
Q
1785.67 513.383 m
1785.67 465.883 l
S
2185.67 513.383 m
2185.67 465.883 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 200.233 25.7551] Tm
0 0 Td
/F8_0 20 Tf
(\\pi/2)
[5.56
0
10
0
5.56
0
5.56
0
10
0] Tj
Q
585.668 942.551 m
537.332 942.551 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 40.8168 87.0883] Tm
0 0 Td
/F8_0 20 Tf
(0)
[10
0] Tj
Q
585.668 1418.38 m
537.332 1418.38 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.8168 134.672] Tm
0 0 Td
/F8_0 20 Tf
(0.5)
[10
0
5
0
10
0] Tj
Q
585.668 1895.05 m
537.332 1895.05 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 40.8168 182.338] Tm
0 0 Td
/F8_0 20 Tf
(1)
[10
0] Tj
Q
585.668 2370.88 m
537.332 2370.88 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.8168 229.922] Tm
0 0 Td
/F8_0 20 Tf
(1.5)
[10
0
5
0
10
0] Tj
Q
q
585.668 512.551 1600.83 2000.83 re
W
/DeviceRGB {} cs
[0.8008 0.8008 1] sc
910.668 585.051 m
1020.67 728.383 l
1113.17 870.883 l
1186.5 1013.38 l
1291.5 1156.72 l
1385.67 1299.22 l
1320.67 1442.55 l
1316.5 1585.05 l
1296.5 1728.38 l
1284.83 1870.88 l
1262.33 2013.38 l
1283.17 2156.72 l
1283.17 2299.22 l
1279.83 2442.55 l
1314.83 2442.55 l
1336.5 2299.22 l
1323.17 2156.72 l
1296.5 2013.38 l
1322.33 1870.88 l
1341.5 1728.38 l
1379 1585.05 l
1384.83 1442.55 l
1385.67 1299.22 l
1352.33 1156.72 l
1269.83 1013.38 l
1254.83 870.883 l
1594 728.383 l
1479.83 585.051 l
f*
Q
/DeviceGray {} cs
[0.1999] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 70.9832 6.33828] Tm
0 0 Td
/F8_0 22 Tf
(Phase \(radians\))
[12.232
0
11
0
9.768
0
8.558
0
9.768
0
5.5
0
7.326
0
7.326
0
9.768
0
11
0
6.116
0
9.768
0
11
0
8.558
0
7.326
0] Tj
[0 1 -1 0 16.4832 97.1719] Tm
0 0 Td
/F8_0 22 Tf
(Depth \(mm\))
[15.884
0
9.768
0
11
0
6.116
0
11
0
5.5
0
7.326
0
17.116
0
17.116
0
7.326
0] Tj
Q
q
585.668 512.551 1600.83 2000.83 re
W
5 w
/DeviceRGB {} CS
[0 0 1] SC
910.668 585.051 m
1020.67 728.383 l
1113.17 870.883 l
1186.5 1013.38 l
1291.5 1156.72 l
1385.67 1299.22 l
1320.67 1442.55 l
1316.5 1585.05 l
1296.5 1728.38 l
1284.83 1870.88 l
1262.33 2013.38 l
1283.17 2156.72 l
1283.17 2299.22 l
1279.83 2442.55 l
S
1314.83 2442.55 m
1336.5 2299.22 l
1323.17 2156.72 l
1296.5 2013.38 l
1322.33 1870.88 l
1341.5 1728.38 l
1379 1585.05 l
1384.83 1442.55 l
1385.67 1299.22 l
1352.33 1156.72 l
1269.83 1013.38 l
1254.83 870.883 l
1594 728.383 l
1479.83 585.051 l
S
1195.67 585.051 m
1307.33 728.383 l
1184 870.883 l
1228.17 1013.38 l
1322.33 1156.72 l
1385.67 1299.22 l
1352.33 1442.55 l
1348.17 1585.05 l
1319 1728.38 l
1303.17 1870.88 l
1279.83 2013.38 l
1303.17 2156.72 l
1309.83 2299.22 l
1297.33 2442.55 l
S
Q
q
1123.17 523.383 324.164 1980 re
W
5 w
/DeviceRGB {} CS
[0 0 1] SC
1225.67 585.051 m
1225.67 568.484 1212.23 555.051 1195.67 555.051 c
1179.1 555.051 1165.67 568.484 1165.67 585.051 c
1165.67 601.617 1179.1 615.051 1195.67 615.051 c
1212.23 615.051 1225.67 601.617 1225.67 585.051 c
S
1337.33 728.383 m
1337.33 711.816 1323.9 698.383 1307.33 698.383 c
1290.77 698.383 1277.33 711.816 1277.33 728.383 c
1277.33 744.949 1290.77 758.383 1307.33 758.383 c
1323.9 758.383 1337.33 744.949 1337.33 728.383 c
S
1214 870.883 m
1214 854.316 1200.57 840.883 1184 840.883 c
1167.43 840.883 1154 854.316 1154 870.883 c
1154 887.449 1167.43 900.883 1184 900.883 c
1200.57 900.883 1214 887.449 1214 870.883 c
S
1258.17 1013.38 m
1258.17 996.816 1244.73 983.383 1228.17 983.383 c
1211.6 983.383 1198.17 996.816 1198.17 1013.38 c
1198.17 1029.95 1211.6 1043.38 1228.17 1043.38 c
1244.73 1043.38 1258.17 1029.95 1258.17 1013.38 c
S
1352.33 1156.72 m
1352.33 1140.15 1338.9 1126.72 1322.33 1126.72 c
1305.77 1126.72 1292.33 1140.15 1292.33 1156.72 c
1292.33 1173.29 1305.77 1186.72 1322.33 1186.72 c
1338.9 1186.72 1352.33 1173.29 1352.33 1156.72 c
S
1415.67 1299.22 m
1415.67 1282.65 1402.23 1269.22 1385.67 1269.22 c
1369.1 1269.22 1355.67 1282.65 1355.67 1299.22 c
1355.67 1315.79 1369.1 1329.22 1385.67 1329.22 c
1402.23 1329.22 1415.67 1315.79 1415.67 1299.22 c
S
1382.33 1442.55 m
1382.33 1425.98 1368.9 1412.55 1352.33 1412.55 c
1335.77 1412.55 1322.33 1425.98 1322.33 1442.55 c
1322.33 1459.12 1335.77 1472.55 1352.33 1472.55 c
1368.9 1472.55 1382.33 1459.12 1382.33 1442.55 c
S
1378.17 1585.05 m
1378.17 1568.48 1364.73 1555.05 1348.17 1555.05 c
1331.6 1555.05 1318.17 1568.48 1318.17 1585.05 c
1318.17 1601.62 1331.6 1615.05 1348.17 1615.05 c
1364.73 1615.05 1378.17 1601.62 1378.17 1585.05 c
S
1349 1728.38 m
1349 1711.82 1335.57 1698.38 1319 1698.38 c
1302.43 1698.38 1289 1711.82 1289 1728.38 c
1289 1744.95 1302.43 1758.38 1319 1758.38 c
1335.57 1758.38 1349 1744.95 1349 1728.38 c
S
1333.17 1870.88 m
1333.17 1854.32 1319.73 1840.88 1303.17 1840.88 c
1286.6 1840.88 1273.17 1854.32 1273.17 1870.88 c
1273.17 1887.45 1286.6 1900.88 1303.17 1900.88 c
1319.73 1900.88 1333.17 1887.45 1333.17 1870.88 c
S
1309.83 2013.38 m
1309.83 1996.82 1296.4 1983.38 1279.83 1983.38 c
1263.27 1983.38 1249.83 1996.82 1249.83 2013.38 c
1249.83 2029.95 1263.27 2043.38 1279.83 2043.38 c
1296.4 2043.38 1309.83 2029.95 1309.83 2013.38 c
S
1333.17 2156.72 m
1333.17 2140.15 1319.73 2126.72 1303.17 2126.72 c
1286.6 2126.72 1273.17 2140.15 1273.17 2156.72 c
1273.17 2173.29 1286.6 2186.72 1303.17 2186.72 c
1319.73 2186.72 1333.17 2173.29 1333.17 2156.72 c
S
1339.83 2299.22 m
1339.83 2282.65 1326.4 2269.22 1309.83 2269.22 c
1293.27 2269.22 1279.83 2282.65 1279.83 2299.22 c
1279.83 2315.79 1293.27 2329.22 1309.83 2329.22 c
1326.4 2329.22 1339.83 2315.79 1339.83 2299.22 c
S
1327.33 2442.55 m
1327.33 2425.98 1313.9 2412.55 1297.33 2412.55 c
1280.77 2412.55 1267.33 2425.98 1267.33 2442.55 c
1267.33 2459.12 1280.77 2472.55 1297.33 2472.55 c
1313.9 2472.55 1327.33 2459.12 1327.33 2442.55 c
S
Q
5 w
585.668 2513.38 m
2185.67 2513.38 l
S
2185.67 513.383 m
2185.67 2513.38 l
S
2185.67 728.383 m
2184.83 728.383 l
S
/DeviceGray {} cs
[0.4663] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 221.4 65.6719] Tm
0 0 Td
/F8_0 20 Tf
(IG)
[6.66
0
14.44
0] Tj
Q
2185.67 1299.22 m
2184.83 1299.22 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 221.4 122.755] Tm
0 0 Td
/F8_0 20 Tf
(G)
[14.44
0] Tj
Q
2185.67 2085.05 m
2184.83 2085.05 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 221.4 201.338] Tm
0 0 Td
/F8_0 20 Tf
(SG)
[11.12
0
14.44
0] Tj
Q
q
585.668 512.551 1600.83 2000.83 re
W
[29.2 35.04] 0 d
20 w
585.668 1656.72 m
2185.67 1656.72 l
S
585.668 942.551 m
2185.67 942.551 l
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMUSerifRoman
%%EOF
