%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.33.0 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Linux 4.2.0-42-lowlatency #49-Ubuntu SMP PREEMPT Tue Jun 28 23:12:17 UTC 2016 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 346 260
%%HiResBoundingBox: 0 0 346 259.44
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMUSerifRoman
%!FontType1-1.0: CMUSerifRoman
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2006 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2006 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman Regular) readonly def
/FamilyName (Nimbus Roman) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMUSerifRoman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 772 688] readonly def
/StrokeWidth 0 def
/UniqueID 5082812 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 67 /C put
dup 70 /F put
dup 72 /H put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F88E0E90C57EC003CFF45554C63978A4457910ACCCBDB199AE01D3A5CC868F4B
822F86C8BEBF268A62A74B74B7BB3BB731E3098EBB936E540471387BC93EBC24
731A8FD551B73BB61F5470D5B804CCE0D897C3F8651422B30EBF8D82BF962DDA
BF33C897A6ACD27770FAA07EB13C67191297413C15F11F22612AB3189B5B27D9
5F8A0A4724E98A018EABBEEE4BF0F4D8E1F282C280B5735411CB2C6626302A4C
21E1D370912CDF61ED23E57916DE9C02A00E3C4B30F957F526C3FAD461933B6E
FA765140C78EF120DDAE516DBB599526395BC827996B5FA9E044FD63F3A3B6DB
47173DCF71DA1E9B09EBF5BDCADA1FC7BE9B91B54F75B5B8EE729C403914B806
31DED09E6B8ECFBD1DEFB1953ECB1E41C94C45CC9BFD50F537892C97CB977328
E9BA77E790AD06D77A20313F86A43F47EBAD6AE4BE8E88E9187815EA29C30EDD
BB6181FCEDE93640D1F366BAF8AF9563B1048CE7D51149924EE25EF61DC7ED76
49FE17653E048C2A4316E9106AC1D1AEFAA10920C27E5FD1BCDE86FAFB2E1E19
E7769C739BD4ABECECEF8F203CCCD799B1A6987CF583AEFE6FB1B4311F3B0E5C
96F774BB26048BAC3B04F030DB98296A4F3722DD76209E340B6F83F1DF5A3243
507027AC351748B3E9C170A1A1258A23CBA9B3FC0E8C19F0FC9851BD849130DD
011FA85F5B91CD2F834B5FCDCA42FBE7F9EFAEA205DD466DAAA91BEAFE0AAA7E
C6E2135509AAEE64235769C8BFC00B4AC8F6E44073A9E5E2DBA9ACD3BAFC1851
411014A57A50656672BD39B45CCA05B61A3CB7DB9541B7594C5A6C2908A2D151
A01F7761920F762681932961A52986239A6BD9DC1551453F944427BE620B5FB1
A33B3CF34C28A2742F515C7D3961EB8092C4C8AD742FAFA45F18653574C69032
5767BBC5429025F683172E94E605AC41DD7DAEBC5E5BF686387655F29EE5FE93
5DB93DA28223C3B737BAACB08C5C744E70FD8C3539F3E07B2FAE4229FE794DDC
8CE4C3D108B31038993EE53EC71257CE13D817C7890AFB6C6986CD91E2A81A09
EAD920FDDBCF6C66F64A4BACCE0C6B0494FA76AB6661F176F67371A5C083C519
439396BF658B82DCA3212599E74C147B8D8F6D0C51A0EF155FA3FC2DD987D83D
79B183571867D0578335319296DAF253EDC5DE0406419DDBBBF2244E59220599
EA8AE657862B366F1AC8DA3CC3C4FF359043CDC869EFD2757161DBD0141BDD22
7912E97B8FA408BFD2186890224837829E4305522C20F9CC82C460DB26C4E81E
4F908BCAE26FDB5FF625044E7C154ACD968809A57357AF07C1C43D91BC09B072
49B5926787FD08DAE41D030435CDEBED7D19CF3273DCED0C5857CD31DD565944
E4BEBD4C5498F7E6CB1832A8FC7909F7F1712D1AE114EBAD7251926411F5C1D7
E8A5E4B4371A88733B8C5418790FF30A9B682CF8D9304516D2D4B18DB4D6F8D4
B03E7344B0C7EE9ABCBFCC40917308D06F8BC114343B57B6AC1C8931F8222CDA
61CC09796DA0DEF6FBB8A03F7DE9235F6B577C027AB9DA6946A5FC4D985573FD
8AD083F1E0C94AFC89F4B478598D12A2EC9AE053536C6CDD033C36012C4E1745
5D58E5BA65D59FECF43D11936AD5BC08B90373CF2ECA373E2B448E9577268D47
47B6FD655C133914BCB39A8DEF703935AE5EB6DCFA1EEABDF3B87CC7DAA8FA8B
5A3278E6F9501DB1A0E2DD1F67BD24B227DFE77B45B471A96C9C1AB68149311D
FC8D05D04D33874124EB58C665FC158AC6C6BB7B0BEC21BD59020C16B892E4FB
C97E3256924D2CE407BD9674271819D52F1AE051B75A81DFFA36D2B09EFA4B59
0C399C4959B06FD49EA33C8EA2C5AD3E1FD71D9B405F635EE547E19E3B00989F
1D677D33DE29084BFAF76D70ABA7D3CE17AD11BEDAA51667349BD85AAA1ABFAE
C38ACFCF8401E27251AAD455B20164B1347A5EA5BC7287345EF6FAB377D55D98
3E60EDFDB3DBB8C58C0B95D5739A69489FEBAA58807054E41E9850E74C31141D
F25252CBD48B00B67BD5F27A6E242C150D659BBEB210EEF9C4639A662B78F29D
45B0AD0D9B701E75772DCB3BAF1E3BC93CBA5554EAA69409CC26CD7CDD2FB381
9705C8A12F7786C4DE18E5CDBC083904B926691E62192A9C1467B19130C7E427
1BF8D844BB0E161BDEB6592237FFE68F09BFB1DA33C364AC4412DF665C0FEA02
926D8457459623FAFEF3547C797FB9FCE66B1A234C91D832196F31E0F5106848
B68D9A2D0C64AAD5C5E2B4BD44B684EC7A1E24CAAD62A40BE1F4E22E4ACBF9CA
755828819D5F27C42EF08DC9A61766357F71F56894CC7E8A1FF7846F94DE94C3
01215DE77DE3D762DAF9B635270640C8F1DC456011F52E5512F0601537A9B272
D6C12726932F770694D90E83C52CFE855F59226E8926C77DDC2A33AC6F0890E7
623DC4AA873BAA88DF748BC9CC9AB5A9C448867DD0E521F4EA6EBAC39D2C2310
3BB157E5DD3CCBC4B17B0F95030260B3B94A78BAFDE4F64DCA9740DFA98D5315
5A38029440F90A5698FDFA8942A64D970C99DA77E229013E6A569544269C6025
22A13726375E7353A3B8EA103832610DA9346072069E506EA27CF8B4747E7D15
07E3DA843E2033556E4BD35C038805D652BA9FAE1CE5282C09E1B6E5ACC04CA5
582AC39A60EFB8EFFB973D3AEC02C71A5C07D80855D90C0184277397267642D7
E1DA56CD2662FC14023DF694F99D4B3731BCD251F36563C355E08CD2D823AC92
576A10675768CC353AEF439852E6995B277EDCC8150A3B8CD7AF94285F3653FE
39F526299D2E092DE213DB65AF1A3D7F84A6CED7A4A57BB4616BB705FC291FAB
44C122BBAAEC558D71967BD4E460A9C2A14B10EE68D7CF5BF71C4E9301E5EFE7
7E895B89A089FE87748559956075646A25226D18BB9628B4CCDC7EE9FEDE817D
A048C838C4331680E775AD31A41351F5C697D9032161FD219487F8692E11D3A7
64054E7F667464B1DF60B37BC9090C7C627C4A17981FE9A66650F08ED325C398
E000C0B98C5137E74D01FB109681418A7BC4AB66B9C5279C97777BD449E296DD
735C8888382691733CC758D3A152BF0AFFB29CA5AC7827283D484DFAADA15A71
A4F9F6133B3746AC624246FE15B98F1F181BFDEE6776BC7E8DD89501A496FFBE
234DBFEE64EA9ABBE6602CD7EBBAFBB8446AED9C552A211CE3661BB1FF189CC2
969A27311998C5130344AB4303722D67E6274B288771F4934FBAC2E102C97077
2615382C25485FB7927DA0FC5FDC4A8998A56F2217065BB3BA0358515FE5027A
B9E2CAB383A210F9FA053891810BE7DF9131D1ABC53E19E5F52B8DADFDB225EB
C1FA75E7D6DB5E059E1F4EA2BD0DB2E60582DD5B9BE22FDADE1731119E96DE28
F2D274D94D7C1AAD66327820BE9DE6DF82D1C3BB5B3FADF57F546DE2B1BB59C6
1F35A125EB61DBBDC1CD8D17CE3FB88CCF991BE7FB87EEF3D5BCB3A9CF5326C0
2336EAC73F43A667B025A28A0963556D4AFA3CA2B56F31A052307A309ABE6CED
6AD7979A7A66EBBA9AC4EF3E1FC64115D75BD071490F3CF6B3D86FE87FE777CE
C856A4E4A8F4D1BEA641EB08532536DE18C0043AA3EA9681F687189E49AD027C
2D38BA3F3ABBD75DFA33FD7B16AE271A6540D680F99BB02735E3CC94B9868152
54A3AC80AD0DCA481E7F19299F5428AA786D00CC7B76D409BFAEAE305900152C
BD326F56DEF39EF0F1BA9864B4628550AD4EAAC03BB3CFC17E79B6D6DE01E8BD
AAD380FF3858AD280F0B429429963D065CCF1A1C6C4C04E4B0A6C484D6F2695A
1679BFDE53783E8BAF376EADCBD410127AB00901D54034E4C62D18D945EED81E
42ECB01AAF9684A539CD843340BA5C7B7C5A16BAC22563963B49C81F8CAA538E
756777E8C1CD01C12727053552449C10C8947400656434BB5A86AD648A9F73F1
A1A6036C31B21E2339A65B9473A85BE5D3B707C780B5FA885A06C16D4912D6FE
C05F9E3EEA1EA3ED60D28185B2731A5F384E3F39D62B0A43DA7AAC032C0D8A68
135412C9DE8B9986AFD181E0E2925009F8CD135421400F466AC87B1098ECA3D8
78ADF3D628728743FAFD1E4A1521BAD29F15A5B8771D5C5FE1C7BB4BF1B0F863
DA4864552F63DFEF2FCD83E3CDFC74F2DB1137E68B1A6C8A013D28E6F917E259
EE3ACB0C31E2405CA8FDAA40492D7331261F4BBCF433659F579BCC50121761B8
5B5295EE423E40049CE5E2205FABCD2EE6D3577C421441894CAAB4133AF2C7C5
AC27232098C79DAA0E9C66837B085883D6288C9EE6C319ABB66CA1CECCCBD4B1
F064ADF287BA8F61AFB524FC6FE892AD822CD60B329BBFDAC56F1816D8B882F3
567C02A29271A5E7576AB367D7E856AEBB2ED218A79AB56EC9CBDEBE172505F8
5BD0E24C0C85B5E72D6B90E678C65E8763FAFA45BEFA31397DD20B74AADD5AFF
84C8BCD2C0D89647C17C4AD2A60621A9EBCA247BA49A0B1BC65FD1788551C1CE
B4527725B039487E85F75D886452A209283FE1567DBCC7A5F1796F1D03CEDF53
4EDCD0A1FB5B686475DC64C1B5A42D2460082DE2A5CCA2285EF163291385C0CE
24F2651F09F9EE88FF767000C513FBF5D7FF03A32B6E7F034D0D52E16724DF1B
63B1CE6E34C7EAD7F93F1426F2272292F469E90C6A2303C51D0F40E87751E681
496EB301E94A677D27577593AA0D2912B2E855F9159F0459B3FFDD14A202C706
E8AB9832CBC183EEFC33E2A02D6EF51CC746513DFA2B88F3C29B22E16A2E6091
62A25FA37CBD62DF18729B23E57B12C56A91D6D4D4F4D1564DE2D4637056F4F0
7B2783D04D3090DF55F0AF8DB97799268B1608B05E8F78EB4CDAB161FF43ABDC
1EBC44724A9BDCE76F30555086FE06690BE4F7A22443A2E7345D41F35D5F06E3
6A8C12355663B9B6BD20996A5C21194247692DAA017074122D883E280565AFD1
6802CEF2C37B7690A2F0D2C66C0FD1371B5B0392C9E29BA4809FA0432B4AD15B
6C96F2673F21FAA4BD8EA25397EB5A645A1C6CED44A1AFC8ED18E97D828A663E
DD66DCA12802F52C78FB73895AA6D20F2B1F528ED730823B879F681429E72413
CCAEEDB5F11E54DB786476EDFAB005C1B52200DB6D62824AE7199B3FFB78446B
342D42135FC0129392735138D2708AB968566EFC3530FED59182419D1AB1EC73
2F64E3358F4518CABE1B575EE747565B786625555B969A0298A8F85F0AD7D353
7CF5B2D1F30E2F79D30DD00819178A2502BF9D7B321B931A3A9D4CC70EEF9ECA
68430630C1497ADA2DF7ADEF63899DD82D6C150C3210224120E57D2D0C656156
4473842D5DF88B972391D086B86B387CC500E9FEF02DE3B2665681BB283541D9
6CEB9C02B4C1C53E0697028BC4244E5FD925ED518A9362975F92A355EDDB07D3
A527ECE8E6AF2D849D947098D1A132336AE6C6024E38BC6D7573AE64E47E8087
3B2AEDDF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CMUSerifRoman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 346 259.44 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
553.668 536.32 2800 2000 re
f*
10 w
1 j
/DeviceGray {} CS
[1] SC
553.668 536.32 2800.002 2000 re
S
/DeviceGray {} CS
[0.4663] SC
553.668 536.32 m
3353.67 536.32 l
S
553.668 2536.32 m
3353.67 2536.32 l
S
553.668 536.32 m
553.668 2536.32 l
S
3353.67 536.32 m
3353.67 2536.32 l
S
553.668 536.32 m
3353.67 536.32 l
S
553.668 536.32 m
553.668 2536.32 l
S
717.832 536.32 m
717.832 488.82 l
S
717.832 2536.32 m
717.832 2584.65 l
S
/DeviceGray {} cs
[0.4663] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 60.7 27.382] Tm
0 0 Td
/F8_0 20 Tf
(10)
[10
0
10
0] Tj
Q
1047 536.32 m
1047 488.82 l
S
1047 2536.32 m
1047 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 93.6168 27.382] Tm
0 0 Td
/F8_0 20 Tf
(20)
[10
0
10
0] Tj
Q
1377 536.32 m
1377 488.82 l
S
1377 2536.32 m
1377 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.617 27.382] Tm
0 0 Td
/F8_0 20 Tf
(30)
[10
0
10
0] Tj
Q
1706.17 536.32 m
1706.17 488.82 l
S
1706.17 2536.32 m
1706.17 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 159.533 27.382] Tm
0 0 Td
/F8_0 20 Tf
(40)
[10
0
10
0] Tj
Q
2035.33 536.32 m
2035.33 488.82 l
S
2035.33 2536.32 m
2035.33 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 192.45 27.382] Tm
0 0 Td
/F8_0 20 Tf
(50)
[10
0
10
0] Tj
Q
2365.33 536.32 m
2365.33 488.82 l
S
2365.33 2536.32 m
2365.33 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 225.45 27.382] Tm
0 0 Td
/F8_0 20 Tf
(60)
[10
0
10
0] Tj
Q
2694.5 536.32 m
2694.5 488.82 l
S
2694.5 2536.32 m
2694.5 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 258.367 27.382] Tm
0 0 Td
/F8_0 20 Tf
(70)
[10
0
10
0] Tj
Q
3023.67 536.32 m
3023.67 488.82 l
S
3023.67 2536.32 m
3023.67 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 291.283 27.382] Tm
0 0 Td
/F8_0 20 Tf
(80)
[10
0
10
0] Tj
Q
3353.67 536.32 m
3353.67 488.82 l
S
3353.67 2536.32 m
3353.67 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 324.283 27.382] Tm
0 0 Td
/F8_0 20 Tf
(90)
[10
0
10
0] Tj
Q
553.668 547.152 m
505.332 547.152 l
S
3353.67 547.152 m
3401.17 547.152 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.5332 47.2988] Tm
0 0 Td
/F8_0 20 Tf
(0)
[10
0] Tj
Q
553.668 772.152 m
505.332 772.152 l
S
3353.67 772.152 m
3401.17 772.152 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.5332 69.7988] Tm
0 0 Td
/F8_0 20 Tf
(5)
[10
0] Tj
Q
553.668 997.988 m
505.332 997.988 l
S
3353.67 997.988 m
3401.17 997.988 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.45 92.382] Tm
0 0 Td
/F8_0 20 Tf
(10)
[10
0
10
0] Tj
Q
553.668 1222.99 m
505.332 1222.99 l
S
3353.67 1222.99 m
3401.17 1222.99 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.45 114.882] Tm
0 0 Td
/F8_0 20 Tf
(15)
[10
0
10
0] Tj
Q
553.668 1448.82 m
505.332 1448.82 l
S
3353.67 1448.82 m
3401.17 1448.82 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.45 137.465] Tm
0 0 Td
/F8_0 20 Tf
(20)
[10
0
10
0] Tj
Q
553.668 1673.82 m
505.332 1673.82 l
S
3353.67 1673.82 m
3401.17 1673.82 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.45 159.965] Tm
0 0 Td
/F8_0 20 Tf
(25)
[10
0
10
0] Tj
Q
553.668 1899.65 m
505.332 1899.65 l
S
3353.67 1899.65 m
3401.17 1899.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.45 182.549] Tm
0 0 Td
/F8_0 20 Tf
(30)
[10
0
10
0] Tj
Q
553.668 2124.65 m
505.332 2124.65 l
S
3353.67 2124.65 m
3401.17 2124.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.45 205.049] Tm
0 0 Td
/F8_0 20 Tf
(35)
[10
0
10
0] Tj
Q
553.668 2350.49 m
505.332 2350.49 l
S
3353.67 2350.49 m
3401.17 2350.49 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.45 227.632] Tm
0 0 Td
/F8_0 20 Tf
(40)
[10
0
10
0] Tj
Q
553.668 536.32 m
3353.67 536.32 l
S
553.668 2536.32 m
3353.67 2536.32 l
S
553.668 536.32 m
553.668 2536.32 l
S
3353.67 536.32 m
3353.67 2536.32 l
S
q
553.668 535.488 2800.83 2001.66 re
W
/DeviceGray {} cs
[0.8008] sc
553.668 627.988 m
717.832 696.32 l
882.832 800.488 l
1047 913.82 l
1113.67 937.152 l
1212 987.152 l
1311.17 1023.82 l
1442.83 1172.99 l
1541.17 1173.82 l
1706.17 1250.49 l
1871.17 1331.32 l
2035.33 1369.65 l
2365.33 1487.99 l
3353.67 1693.82 l
3353.67 2445.49 l
2365.33 2182.15 l
2035.33 2031.32 l
1871.17 1934.65 l
1706.17 1787.99 l
1541.17 1774.65 l
1442.83 1705.49 l
1311.17 1519.65 l
1212 1515.49 l
1113.67 1418.82 l
1047 1439.65 l
882.832 1272.15 l
717.832 1128.82 l
553.668 965.488 l
f*
5 w
/DeviceGray {} CS
[0] SC
553.668 796.32 m
717.832 912.988 l
882.832 1036.32 l
1047 1177.15 l
1113.67 1177.99 l
1212 1251.32 l
1311.17 1272.15 l
1442.83 1439.65 l
1541.17 1474.65 l
1706.17 1519.65 l
1871.17 1632.99 l
2035.33 1700.49 l
2365.33 1835.49 l
3353.67 2069.65 l
S
Q
q
492.832 734.652 2922.5 1395.84 re
W
5 w
/DeviceGray {} CS
[0] SC
583.668 796.32 m
583.668 779.754 570.234 766.32 553.668 766.32 c
537.102 766.32 523.668 779.754 523.668 796.32 c
523.668 812.887 537.102 826.32 553.668 826.32 c
570.234 826.32 583.668 812.887 583.668 796.32 c
S
747.832 912.988 m
747.832 896.422 734.398 882.988 717.832 882.988 c
701.266 882.988 687.832 896.422 687.832 912.988 c
687.832 929.555 701.266 942.988 717.832 942.988 c
734.398 942.988 747.832 929.555 747.832 912.988 c
S
912.832 1036.32 m
912.832 1019.75 899.398 1006.32 882.832 1006.32 c
866.266 1006.32 852.832 1019.75 852.832 1036.32 c
852.832 1052.89 866.266 1066.32 882.832 1066.32 c
899.398 1066.32 912.832 1052.89 912.832 1036.32 c
S
1077 1177.15 m
1077 1160.59 1063.57 1147.15 1047 1147.15 c
1030.43 1147.15 1017 1160.59 1017 1177.15 c
1017 1193.72 1030.43 1207.15 1047 1207.15 c
1063.57 1207.15 1077 1193.72 1077 1177.15 c
S
1143.67 1177.99 m
1143.67 1161.42 1130.23 1147.99 1113.67 1147.99 c
1097.1 1147.99 1083.67 1161.42 1083.67 1177.99 c
1083.67 1194.55 1097.1 1207.99 1113.67 1207.99 c
1130.23 1207.99 1143.67 1194.55 1143.67 1177.99 c
S
1242 1251.32 m
1242 1234.75 1228.57 1221.32 1212 1221.32 c
1195.43 1221.32 1182 1234.75 1182 1251.32 c
1182 1267.89 1195.43 1281.32 1212 1281.32 c
1228.57 1281.32 1242 1267.89 1242 1251.32 c
S
1341.17 1272.15 m
1341.17 1255.59 1327.73 1242.15 1311.17 1242.15 c
1294.6 1242.15 1281.17 1255.59 1281.17 1272.15 c
1281.17 1288.72 1294.6 1302.15 1311.17 1302.15 c
1327.73 1302.15 1341.17 1288.72 1341.17 1272.15 c
S
1472.83 1439.65 m
1472.83 1423.09 1459.4 1409.65 1442.83 1409.65 c
1426.27 1409.65 1412.83 1423.09 1412.83 1439.65 c
1412.83 1456.22 1426.27 1469.65 1442.83 1469.65 c
1459.4 1469.65 1472.83 1456.22 1472.83 1439.65 c
S
1571.17 1474.65 m
1571.17 1458.09 1557.73 1444.65 1541.17 1444.65 c
1524.6 1444.65 1511.17 1458.09 1511.17 1474.65 c
1511.17 1491.22 1524.6 1504.65 1541.17 1504.65 c
1557.73 1504.65 1571.17 1491.22 1571.17 1474.65 c
S
1736.17 1519.65 m
1736.17 1503.09 1722.73 1489.65 1706.17 1489.65 c
1689.6 1489.65 1676.17 1503.09 1676.17 1519.65 c
1676.17 1536.22 1689.6 1549.65 1706.17 1549.65 c
1722.73 1549.65 1736.17 1536.22 1736.17 1519.65 c
S
1901.17 1632.99 m
1901.17 1616.42 1887.73 1602.99 1871.17 1602.99 c
1854.6 1602.99 1841.17 1616.42 1841.17 1632.99 c
1841.17 1649.55 1854.6 1662.99 1871.17 1662.99 c
1887.73 1662.99 1901.17 1649.55 1901.17 1632.99 c
S
2065.33 1700.49 m
2065.33 1683.92 2051.9 1670.49 2035.33 1670.49 c
2018.77 1670.49 2005.33 1683.92 2005.33 1700.49 c
2005.33 1717.05 2018.77 1730.49 2035.33 1730.49 c
2051.9 1730.49 2065.33 1717.05 2065.33 1700.49 c
S
2395.33 1835.49 m
2395.33 1818.92 2381.9 1805.49 2365.33 1805.49 c
2348.77 1805.49 2335.33 1818.92 2335.33 1835.49 c
2335.33 1852.05 2348.77 1865.49 2365.33 1865.49 c
2381.9 1865.49 2395.33 1852.05 2395.33 1835.49 c
S
3383.67 2069.65 m
3383.67 2053.09 3370.23 2039.65 3353.67 2039.65 c
3337.1 2039.65 3323.67 2053.09 3323.67 2069.65 c
3323.67 2086.22 3337.1 2099.65 3353.67 2099.65 c
3370.23 2099.65 3383.67 2086.22 3383.67 2069.65 c
S
Q
/DeviceGray {} cs
[0.1999] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 133.7 6.63203] Tm
0 0 Td
/F8_0 22 Tf
(Contrast \(%\))
[14.674
0
11
0
11
0
6.116
0
7.326
0
9.768
0
8.558
0
6.116
0
5.5
0
7.326
0
18.326
0
7.326
0] Tj
[0 1 -1 0 15.95 80.132] Tm
0 0 Td
/F8_0 22 Tf
(Firing rate \(Hz\))
[12.232
0
6.116
0
7.326
0
6.116
0
11
0
11
0
5.5
0
7.326
0
9.768
0
6.116
0
9.768
0
5.5
0
7.326
0
15.884
0
9.768
0
7.326
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMUSerifRoman
%%EOF
