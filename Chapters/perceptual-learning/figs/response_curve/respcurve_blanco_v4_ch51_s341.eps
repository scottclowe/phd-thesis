%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.33.0 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Linux 4.2.0-42-lowlatency #49-Ubuntu SMP PREEMPT Tue Jun 28 23:12:17 UTC 2016 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 346 260
%%HiResBoundingBox: 0 0 346 259.44
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMUSerifRoman
%!FontType1-1.0: CMUSerifRoman
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2006 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2006 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman Regular) readonly def
/FamilyName (Nimbus Roman) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMUSerifRoman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 772 688] readonly def
/StrokeWidth 0 def
/UniqueID 5082812 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 67 /C put
dup 70 /F put
dup 72 /H put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F88E0E90C57EC003CFF45554C63978A4457910ACCCBDB199AE01D3A5CC868F4B
822F86C8BEBF268A62A74B74B7BB3BB731E3098EBB936E540471387BC93EBC24
731A8FD551B73BB61F5470D5B804CCE0D897C3F8651422B30EBF8D82BF962DDA
BF33C897A6ACD27770FAA07EB13C67191297413C15F11F22612AB3189B5B2A44
814C77526AF5E20C88575A7D49F5D918920B74E535680DBC7B9C73E575DDB375
285AA4B4471A13E4A104BB259A7B4A62CCFB4C5CAC44C3E3CD6AF732DB4DD9B6
71B7A76143ADF6D0D2CF4D67AB7FF45637ED8D2C679E92C70CA53206D171C617
8B777E36CCBB2628BA1BF830E62EC7F0863EE34345359A8A9D60954098C2F66E
13F28BA3DA9827D84AACAA6400E9D272C414851E84DCF7B47CA5300D377BAE8B
95231CEFA62664BCFF28D851C2B881BABD1E7242621006A0444E2577EB2E951D
E46463FDE88EC7CF41CCD0AA190C0EA2779AB1A00477CB58F7BDEDB93CE65A53
10119EA8EA19F8C6496951B43F4DD86716F6D55DAD27DCD1D73AE742AD22E38E
47BB503474D8849013B1B767731D94D1C443C88F111EE0646ABEB1D2BF898793
5187F3C164BA995B3563408E2576C3EFA7589FAA4788886E3B821B289E4AA132
424CC1142E524115CCC29521895DCC5CB7CA58EA6B9C47DA1E0981DFD034D25B
31B7D932F91589D1B807862F883FC37C3E423FDE5DA79BE944E9F9AF84B66862
7A83215F0DDD01476CE0DB70A72F845FDEB965369C8C62747BA1B5FEA0BA1333
30FD86E265E6D9D76D70CD6FD7105E13ABB7A3EE925D9D95B5804A7F492C5F1D
BE123DB48199871A5225045DD15CCEE67B57605A306760F955131A795E2EE5CE
DAA96968427C28F86F2EBFE887A09E3F22E1DFC9834764F0084D9DD1C6F7AB9D
660981A985E966659C2089900F034D09F361F31AE1339F6217D5C5271E8772B1
7A64C5E81A534521A1231B2D816983E0810AA69CF94EF054EE27C274F0A6B34A
4C4564ED9DDBB1C20730B67893B21A1AF55D12C312419D8BA7F776B073E5AEA4
E5CEBE12DE5175AF2DF6111CD3E429B38E56117D7EA74AE73AF39DB363DBD823
E3DB97D50693C76F685A78E943BF63797B1A7F6C55A7292EAF2F2B4729BC2127
CE6E2A5FE3B49E07494952AB32AB42A1D7875479BAD93C3E242A35355CEC2D57
4D89DEDD1605B194B1F51735CE545FD1F7951D08FADA6AAD884EFA10C1516FF0
95BC6D040A3AE1D0CD48B6DBF55CE37F01795C9A8EEE5297F9BCDE92E7848C17
DF81ABB0DACC6EE3192B452FE90D7272DF5924FD99F460943AB655BE43676B6F
A003E9DF4845CF830822747869CF2FEA75DF58A50E47C01B546CB94BD292ADBC
BA8B381B922E53D16E49A270638AA897887172F3E4382905F4F7EE0695BF667F
2FD213E8A4AA9F857636554044AAA90FE3930AAED47B59B56F36C61B34AA4573
64B16DF6A7E423C08728A9A89C6165A2442034F2912654E876CEBA187F829B32
8F74E6661131BF5D0C29066D0D5B7D39D8C03A064572543C73F4060411784B38
178691C8E5FFF530DC313D3014F27917CB749D6F10B6C5CD6E6100774F75987F
7ECFE4B2FD167A71E937E602A6BB6133616C1F68A9DAAE46A8FAB676FD1C85C0
574C35A4093B23C827CB1C9B934D555DE8C7996FC7E8353C8417F61FB7D2F62A
ACF8921D62992573AB33CE880388F04082902CE888E71EBCEB8A280692D91E10
A00F9C06BB6C62440919336239E7FA998DA878CB810FE5517129EE70539A592C
3D3D42316E0287AA224AA6174ABE1599103F0A6203F16771C2D18F58CA5FA6DA
25CEC774E6AA77BCF11FDC1316B1B45E3D23C19D698781706C521AFF203FE4AE
F8A182FD14B739C50A0396C9A0385766ED80323282BEDFBC3B00974F0A5A584B
9FA1699471D8EF106CE6FC5CD24A9A5B05998AAAD39EB67EDF2F9F4AED8F96AF
43E2FA55E4CCE74AE4D51A7BC38134B5D41AB983A999AE2FBFFB2CA208F0341F
674BCD559AB4850BDD5131BED0D7B7F973F98FC608F507502257ADCCBF7638E9
A24453E4D34723D3598F569A5DAD93AE0A4D15AEA4EF0602325A93ECE5779A83
23EE814D21DC6A264D6BCE6FB3BD87F8DF09A035F0A0976994C15D23138B17D6
EF7E870122E95E769C1D90F9B5DBF79C5E9EB3A83421288FA1378CF955A49752
CD3E66BB61621EE3FFB4A5C50347E4AF2884B0576D05255DAC2ADD030013F449
798EAA11926DCC430F994D1DC955D37588B0E1D22BF0F4B8A24FFE6EDDF4167A
6F2002766FFF9B010FA43EAD0FC68440ED8A2193D224AE3D3EA1BCCDE8F2B12E
030F2B43C8F02719D3978EA5E79669140C697D428F51E6580A50D7C3ABA6394A
DE58F1737C4D1FA652FC0A743808B566C21BB7AE674B4D3E383CE410FB8B04CF
75B448A525C44F4AD77FBD895A238752A9C1AEFA3BE1F5E7A891EEE5EDFAC54F
AE64B00339D3E46642DD7D8C0E26291723BBA585A2892DBBB42E123F7DBA6032
FC6D5C8B1BC7C94E6B21CEB6ACE01FC1768A58AF31C9806D92AC198339483026
B7E2CBD1FEE7FABA636D96D58828F4FA186AA885247B29390B24EDEA99019BFE
7BBCA5DD8B78363C7E8C772D9E3EA77B183FDC580C8719C08BB58E5930F023AF
2030DB6611D50EEB8F2A6E7588B19C02DB768F3C02CFF71A68D7AA9F40434920
3DCCD0947E0524B720359955ABD941DF7EAE28429093890A9678C0EC16EC9DDA
63DEAA5C6F18957CFB8B8CB4114CE6C783F73DF21818155B0228B02CAC59BA9C
F2AEC677520BCC1B6BF40D6BF1DD72B2ACE48E0DB799765E55B8C659EC87BBAF
AB2864EB410448AC90AF8E6A96CB802069CDA7AC92F7DE0BE02CB2275A68C6C1
C5B0F0D5E7C2C6AB57640A7EF8908DDBB223DE3B33D20D7D5B1E8CB524791046
5B49CC6F41DE7BCE66C29806D27E91C2C44BA98C1781788CB6805F210AAAD795
08FC66E340DC005A6B9412E4CF9C0FA06DF7BD82593DBEC3E5EA70928D895E8B
BB1FB65B4C18F5CA788BE81A7D3DA51CBC2B07820D9C9310C8BB5964D05E832D
D892EE5B0D835486AC408916B5B0C997C0B723CD181897B34B128AAC42248BA3
94185D9B0249608BF29146E98C0A4A2D7341FD75BAB2B140D427768246F16F14
BD51C51BB0C1DE29EA15894B82CAB4B32A84F5C70F71EEAA828E5601C709A764
4C8B88A377394F827B18F5CE4DD5770AAA8393A7AC3AA8C5C5332725E7E105C0
EC6163363C0D7C5835FA01EB09F8C1A2A59808B8AA0268315ECF99601B3D9DAC
8263D5FE6EB1B1C67D1B349961C3FBDCC5FCEDB4562CF3E362978BB4ADAE0C27
0FC32B6FECAC5AE39FA8A297D3D42C729BE63CFC6E6F0ABF7705E25E8E8D57FE
4CCE63C62E9C009E7AEBB16297FAF82389D44D6B3E8DD5F7A929972F8F25910C
CE34DD15022A727294F58D1DD3EE4F23D50F5E29CFD1CFFDF78A4AA6E8D0C586
F4D0FFCD56622057724E271B50036324F8DF14276A241499A224045070FD4D01
C94C2FD3338AF67BB3FCD19AC4ED2E6A40941A5DE5D691DD61D2F8B2966CC1A4
5AE9818269B96C2F4D3553564BCD3B34ABDF7FD92EC6FE3664448BD63872CFC9
8681DEA48701CF341BA5A31FA0F9FA61DCF3AF14623248174B1AE9BAFFA05A35
33B5DCA92BE2F7927FF0CF276D216171CE532C03BDB46012C940A7BD68D1BD68
8E63D417BA4DCF867A4A7DA2CA88988804679131BF414BA969F0A140354915DA
F1D3B94CF8CB8BE07DA315797455738AB7D1D579755A232818DF24B08A6D7E60
77A5C7F29D119404ABA579A7909C7AD9D17BEA72C886E02FA9483985A58E1D79
D49717F2A08BBCA29C901A66BC15AAB1955C09E36F36A6696082E2590EE94E23
14A990C8FB86F9E4111884B8855772A1C38B07790796851495E45F24F65382DF
DD7EBBC2A488F107BC38295A9CFAACDF6194D1FFA1A9A7FC210CDA82DA145F1B
EE6FF4CFE084094D078F3FBD34325D595180FF8489E6357409651AC2D4F1A7C8
71A5B9A6028945FBCC583E0B525D5BAF07864CD8FCC760A8C8F2CAB58452E4CE
C34D11E896F26B0C7673BCAEF228765A2D944E29586F2D35DDD36AADFF0E4A11
616FEECDD53E0F839CF506336BADA199A8B84FABB0332E0218B61870BABFB408
896FEA6F7CAC38DD238B7BD1AA36B50EC69DD1D5B80120B316EA26B18BEFA7CC
603C42629204DD45CB13A46CC3E5A75DBBFA73F26ACE259595B441D576A96FD3
DBEFF823507B25485DCE2EC5E00D29FCC3402462801F19E74820EE62009651F3
EC4939091899C72ECAADF3D8A85204B02EA8BCCA69EF76D5BB8E13D765118178
5657B4FEA146685C0A694DC0BD6EBE6351824B2618AA5EAC376EE4E71B94C788
840FC1604373A72735DF68666EF0FBF6A9443134844567368A53C47FBE058569
06CBE0E74A9E4530329E38A1B8E57CD03724A4F2EAFC856ADDFCF8144702D28E
CF2A9BE1CE9DD38324F195E66A0106FF2F7E690B6282F36E179985767CF58E42
3A92C8190C7746DEA142830567FA8EA180E258BEACFCFE93ED10425D4F8B2445
B3E1083F03F0CDA193D16B994BEAADAA1825F226CB4BC195696456C1C0083F38
BD4FBE302F2F35285934C09EB657DD6173F49DD0765F266F286E3A18516B6904
4F83A0849F14A272658DEBDF3991F2B7ED0FD18C2DE4D38047163920A57342DA
D7653CBDF2C0717E5E55461DD269F29176EB5353321A6757672A16BAA9D552C1
7A12E5E2A8C8D07BEBA34CFE842DBED2B6B2B96F4385EB031DF798FBDF3987B4
49A28D685BA90AC365E2C7C48F0EB2D6120F9595611F7400DCEDE941C3A447AD
7D73B175BF6DAAC27AE92C06212C1F3C77F016FA62E6C80FAEE6D0A568EC165E
C7B03F9175CDB3840E6468068E1DCFDC9AD3976FCE436204A81EAADBD69B572A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CMUSerifRoman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 346 259.44 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
553.668 536.32 2800 2000 re
f*
10 w
1 j
/DeviceGray {} CS
[1] SC
553.668 536.32 2800.002 2000 re
S
/DeviceGray {} CS
[0.4663] SC
553.668 536.32 m
3353.67 536.32 l
S
553.668 2536.32 m
3353.67 2536.32 l
S
553.668 536.32 m
553.668 2536.32 l
S
3353.67 536.32 m
3353.67 2536.32 l
S
553.668 536.32 m
3353.67 536.32 l
S
553.668 536.32 m
553.668 2536.32 l
S
553.668 536.32 m
553.668 488.82 l
S
553.668 2536.32 m
553.668 2584.65 l
S
/DeviceGray {} cs
[0.4663] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 44.2832 27.382] Tm
0 0 Td
/F8_0 20 Tf
(10)
[10
0
10
0] Tj
Q
1113.67 536.32 m
1113.67 488.82 l
S
1113.67 2536.32 m
1113.67 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 100.283 27.382] Tm
0 0 Td
/F8_0 20 Tf
(20)
[10
0
10
0] Tj
Q
1673.67 536.32 m
1673.67 488.82 l
S
1673.67 2536.32 m
1673.67 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 156.283 27.382] Tm
0 0 Td
/F8_0 20 Tf
(30)
[10
0
10
0] Tj
Q
2233.67 536.32 m
2233.67 488.82 l
S
2233.67 2536.32 m
2233.67 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 212.283 27.382] Tm
0 0 Td
/F8_0 20 Tf
(40)
[10
0
10
0] Tj
Q
2793.67 536.32 m
2793.67 488.82 l
S
2793.67 2536.32 m
2793.67 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 268.283 27.382] Tm
0 0 Td
/F8_0 20 Tf
(50)
[10
0
10
0] Tj
Q
3353.67 536.32 m
3353.67 488.82 l
S
3353.67 2536.32 m
3353.67 2584.65 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 324.283 27.382] Tm
0 0 Td
/F8_0 20 Tf
(60)
[10
0
10
0] Tj
Q
553.668 972.152 m
505.332 972.152 l
S
3353.67 972.152 m
3401.17 972.152 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.5332 89.7988] Tm
0 0 Td
/F8_0 20 Tf
(5)
[10
0] Tj
Q
553.668 1517.15 m
505.332 1517.15 l
S
3353.67 1517.15 m
3401.17 1517.15 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.45 144.299] Tm
0 0 Td
/F8_0 20 Tf
(10)
[10
0
10
0] Tj
Q
553.668 2062.15 m
505.332 2062.15 l
S
3353.67 2062.15 m
3401.17 2062.15 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.45 198.799] Tm
0 0 Td
/F8_0 20 Tf
(15)
[10
0
10
0] Tj
Q
553.668 536.32 m
3353.67 536.32 l
S
553.668 2536.32 m
3353.67 2536.32 l
S
553.668 536.32 m
553.668 2536.32 l
S
3353.67 536.32 m
3353.67 2536.32 l
S
q
553.668 535.488 2800.83 2001.66 re
W
/DeviceGray {} cs
[0.8008] sc
553.668 627.988 m
833.668 814.652 l
1113.67 748.82 l
1393.67 805.488 l
1505.33 808.82 l
1561.17 787.152 l
1617 850.488 l
1729.5 927.152 l
1785.33 942.988 l
1841.17 977.988 l
1953.67 979.652 l
2233.67 1088.82 l
2793.67 1112.15 l
3353.67 1351.32 l
3353.67 2445.49 l
2793.67 2207.15 l
2233.67 2049.65 l
1953.67 1832.99 l
1841.17 1846.32 l
1785.33 1782.15 l
1729.5 1737.99 l
1617 1756.32 l
1561.17 1489.65 l
1505.33 1642.15 l
1393.67 1468.82 l
1113.67 1432.15 l
833.668 1361.32 l
553.668 1238.82 l
f*
5 w
/DeviceGray {} CS
[0] SC
553.668 932.988 m
833.668 1087.99 l
1113.67 1090.49 l
1393.67 1137.15 l
1505.33 1225.49 l
1561.17 1137.99 l
1617 1302.99 l
1729.5 1332.15 l
1785.33 1362.99 l
1841.17 1412.15 l
1953.67 1406.32 l
2233.67 1568.82 l
2793.67 1659.65 l
3353.67 1898.82 l
S
Q
q
492.832 871.32 2922.5 1088.33 re
W
5 w
/DeviceGray {} CS
[0] SC
583.668 932.988 m
583.668 916.422 570.234 902.988 553.668 902.988 c
537.102 902.988 523.668 916.422 523.668 932.988 c
523.668 949.555 537.102 962.988 553.668 962.988 c
570.234 962.988 583.668 949.555 583.668 932.988 c
S
863.668 1087.99 m
863.668 1071.42 850.234 1057.99 833.668 1057.99 c
817.102 1057.99 803.668 1071.42 803.668 1087.99 c
803.668 1104.55 817.102 1117.99 833.668 1117.99 c
850.234 1117.99 863.668 1104.55 863.668 1087.99 c
S
1143.67 1090.49 m
1143.67 1073.92 1130.23 1060.49 1113.67 1060.49 c
1097.1 1060.49 1083.67 1073.92 1083.67 1090.49 c
1083.67 1107.05 1097.1 1120.49 1113.67 1120.49 c
1130.23 1120.49 1143.67 1107.05 1143.67 1090.49 c
S
1423.67 1137.15 m
1423.67 1120.59 1410.23 1107.15 1393.67 1107.15 c
1377.1 1107.15 1363.67 1120.59 1363.67 1137.15 c
1363.67 1153.72 1377.1 1167.15 1393.67 1167.15 c
1410.23 1167.15 1423.67 1153.72 1423.67 1137.15 c
S
1535.33 1225.49 m
1535.33 1208.92 1521.9 1195.49 1505.33 1195.49 c
1488.77 1195.49 1475.33 1208.92 1475.33 1225.49 c
1475.33 1242.05 1488.77 1255.49 1505.33 1255.49 c
1521.9 1255.49 1535.33 1242.05 1535.33 1225.49 c
S
1591.17 1137.99 m
1591.17 1121.42 1577.73 1107.99 1561.17 1107.99 c
1544.6 1107.99 1531.17 1121.42 1531.17 1137.99 c
1531.17 1154.55 1544.6 1167.99 1561.17 1167.99 c
1577.73 1167.99 1591.17 1154.55 1591.17 1137.99 c
S
1647 1302.99 m
1647 1286.42 1633.57 1272.99 1617 1272.99 c
1600.43 1272.99 1587 1286.42 1587 1302.99 c
1587 1319.55 1600.43 1332.99 1617 1332.99 c
1633.57 1332.99 1647 1319.55 1647 1302.99 c
S
1759.5 1332.15 m
1759.5 1315.59 1746.07 1302.15 1729.5 1302.15 c
1712.93 1302.15 1699.5 1315.59 1699.5 1332.15 c
1699.5 1348.72 1712.93 1362.15 1729.5 1362.15 c
1746.07 1362.15 1759.5 1348.72 1759.5 1332.15 c
S
1815.33 1362.99 m
1815.33 1346.42 1801.9 1332.99 1785.33 1332.99 c
1768.77 1332.99 1755.33 1346.42 1755.33 1362.99 c
1755.33 1379.55 1768.77 1392.99 1785.33 1392.99 c
1801.9 1392.99 1815.33 1379.55 1815.33 1362.99 c
S
1871.17 1412.15 m
1871.17 1395.59 1857.73 1382.15 1841.17 1382.15 c
1824.6 1382.15 1811.17 1395.59 1811.17 1412.15 c
1811.17 1428.72 1824.6 1442.15 1841.17 1442.15 c
1857.73 1442.15 1871.17 1428.72 1871.17 1412.15 c
S
1983.67 1406.32 m
1983.67 1389.75 1970.23 1376.32 1953.67 1376.32 c
1937.1 1376.32 1923.67 1389.75 1923.67 1406.32 c
1923.67 1422.89 1937.1 1436.32 1953.67 1436.32 c
1970.23 1436.32 1983.67 1422.89 1983.67 1406.32 c
S
2263.67 1568.82 m
2263.67 1552.25 2250.23 1538.82 2233.67 1538.82 c
2217.1 1538.82 2203.67 1552.25 2203.67 1568.82 c
2203.67 1585.39 2217.1 1598.82 2233.67 1598.82 c
2250.23 1598.82 2263.67 1585.39 2263.67 1568.82 c
S
2823.67 1659.65 m
2823.67 1643.09 2810.23 1629.65 2793.67 1629.65 c
2777.1 1629.65 2763.67 1643.09 2763.67 1659.65 c
2763.67 1676.22 2777.1 1689.65 2793.67 1689.65 c
2810.23 1689.65 2823.67 1676.22 2823.67 1659.65 c
S
3383.67 1898.82 m
3383.67 1882.25 3370.23 1868.82 3353.67 1868.82 c
3337.1 1868.82 3323.67 1882.25 3323.67 1898.82 c
3323.67 1915.39 3337.1 1928.82 3353.67 1928.82 c
3370.23 1928.82 3383.67 1915.39 3383.67 1898.82 c
S
Q
/DeviceGray {} cs
[0.1999] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 133.7 6.63203] Tm
0 0 Td
/F8_0 22 Tf
(Contrast \(%\))
[14.674
0
11
0
11
0
6.116
0
7.326
0
9.768
0
8.558
0
6.116
0
5.5
0
7.326
0
18.326
0
7.326
0] Tj
[0 1 -1 0 15.95 80.132] Tm
0 0 Td
/F8_0 22 Tf
(Firing rate \(Hz\))
[12.232
0
6.116
0
7.326
0
6.116
0
11
0
11
0
5.5
0
7.326
0
9.768
0
6.116
0
9.768
0
5.5
0
7.326
0
15.884
0
9.768
0
7.326
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMUSerifRoman
%%EOF
