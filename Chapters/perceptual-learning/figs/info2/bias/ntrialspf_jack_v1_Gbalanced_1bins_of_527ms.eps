%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.33.0 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Linux 4.2.0-42-lowlatency #49-Ubuntu SMP PREEMPT Tue Jun 28 23:12:17 UTC 2016 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 325 302
%%HiResBoundingBox: 0 0 324.4 301.67
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMUSerifRoman
%!FontType1-1.0: CMUSerifRoman
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2006 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2006 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman Regular) readonly def
/FamilyName (Nimbus Roman) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMUSerifRoman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -217 775 688] readonly def
/StrokeWidth 0 def
/UniqueID 5082812 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 69 /E put
dup 78 /N put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F88E0E90C57EC003CFF45554C63978A4457910ACCCBDB199AE01D3A5CC868F4B
822F86C8BEBF268A62A74B74B7BB3BB731E3098EBB936E540471387BC93EBC24
731A8FD551B73BB61F5470D5B804CCE0D897C3F8651422B30EBF8D82BF962DDA
BF33C897A6ACD27770FAA07EB13C67191297413C15F11F22612AB3189B5A6075
D9911343DB180333B689A08E2C69B55B275DF1535CC1588FEC5D5313AA487B07
20B53C959DE8D1E9DD6F2667205FA0352359AA312B92FA4645E50F1C271EF241
217AD02E3478E9AAD6D1043567259E99D8AAB9C066FF740DA5AFAA5C83410FB0
291FBF76DEC0CCA407009A70C225E652CBE4CE202EBC6ADBED33EE77FF4ED4FD
8EFA556E55A0894518EE35BCC382B867F8BC840A2D587931C255E3483140B5F0
2D335CC3554AE73861A377382D3ED653829446268ECD4D39B8156F174A8216D1
368D128BEA163F5A2E4F38E54DF16C06DF2A4DEAC2B2EF8A4000738A6C8778C2
2B0BD97FCE7419DBD89F85F71FAF77D3125D9DA97E1D7763DA765E413A4A0D6C
B77867BF971D50566999B17DD1F3FF4A6790BE8A31B35D9FEC98DD3EB8C9769B
944B146DAE474E401FF8DCE3B6205A8293413FBDD96D94520AA04E57C1AADFD9
F02E53BB7511DB1E7AAE83E4233C4764EFDF728E703DAE9B1B94FE951C08625F
BA66ED1283AD71468C8B893A1416A91A0F7901B1464332A018E3391CC830DA01
36363A78D1F1E2A530E25A0EA5799A7170AADCC4C32751208815FCA6807BA061
C13A640764CC5A8CB0950B8D34437019B456F292B475605293101EA4BD09CF06
E5D536F8498D56F18E443E93D430F12FE237AF231FB5690CB5668D69DBA9FF50
FD74D9914F4E3EF33C2E89852506D1D12D21DA5E738CC9BD3209805E070D9B33
BF22832BE0A344B031E31CDB502EDBE246AE3CF89C983C9D4D445E51A7953C37
148A93E192210B04DF37F7276BAA88847F0272C6809B474EDA312274C108BD15
E189107CF1934C471CD6D6ED9EDE2E31B1EE29C5919B4A897BED99282062A3A8
0609BEA15E51EA0B35117B224CA3E072CCB528F240CC1EEDE9F0FE99BC81A01E
3F4EE2EFF6135A62EB6B0B1F2108F7C4A744FC676DCB8D5BE8727AF67E55929D
46721F9B694E5A965501E6CE41726B56415068DE5E58CB4D76EC1EAF5A96E885
3D1728289D193CF435DF5E071BA12E772D118F9B788C5B629D490DCE5CE0A9FF
EBDF287098E54E3647BF755F6960AEB823888461B451AB2814E589A8440DACDA
3C18AD936DC668CB0D8C4E57D96DEA3CE7A6483B99CB8A0B30C4243B3D21454A
A4ACE82E0F547E4C8C6F993CB36945712B7BC431E8DD9CF5AF929D4076E77118
C3856C550AB129B58E5509D867BB1B96F58ECF7EA35580B6CAE5E72FC1A00C43
1D2390B327033DA79F50465D92F8E89A3EFE51AA362E4926C02CE4C623A5EEC4
5876C9040030CCB2E032EA38CDFA585E7DBFF31640E70BBD6F3857ABDCCA4A80
AE6C6094882EC47085506EE3BE2C0BECC9F7F399E84AA45C060A823CF3FB5C84
6D5BF2D04E66EF1ED5225F97DE12488A861658A0472CABC773192B6F60EAE414
08F57411D0A273D8B897F40ABC1437823399A2AA5AE5AA6F40C2436C4A2488D4
443AA1F2EF571B5AD888ACB2D47939ED6EFD9793D62366350B75096F23491B69
E4FF0ECC53C38A54BEA7EC2C71B11FA6682CC197A0E00B29FB36266FC2037540
C465A76C94AE512C97192EC730D30B229C0249F0FA1A2645E6518213BA6978C9
5E9B0E0294B601CAF65EF52D83BE78131D8BDE010440CEC23BD3798F8133A486
89C9F1F08663298E81E1D2BCF8691102773AC48B0FD3CFCF1AD5F35805BB85AA
53B05559245ED690F7A59F092527FFD07BFCCF3F2D0C4ECB664DBF404E2B538A
6310ED5E26062526C86CBDC7B32214D938C70346220061EFEE60633E299DF998
6AEEEDDDB497E37C84225A62FE3F105ABE9CEEAD63FD73499C71C2A85386FDB2
AFD6AEA3137861C3BF62E59D018DE5E4A36600678E6996ACD7716B342EE1CE9F
EF53D73A189B3F4451BF279CF76DB075C3024C6FDD81B8BB870647F21F4A5AB9
0F6EAEB308085C7645F80EF8722C43D60D0C4B2DFBDAB364A4F7C2B16C1729D5
C294007252F3FC7F72175FB989D7A69BB3C7037D05A4ADFE578753805BFC2733
189DC280E631C6D3F6A3BB8EBEF9CF183CF7FBBD1ECB1978D4231BA36512652C
AE60B72E9501C735CC9D12CF61CCEA2B4B1A6D1C8A3E9B15A6B2528F46D467AD
FDEC042128524DCF95D9A4C345DE7060329932BF4B7109044A628D54F94FDB31
072261FF7C886A7CCCC6F1A61F0BF087AA1D59A736EBB2D055F22DBF5B93DC00
8F8F34C1373FF02FC7461D5CFB608C6BD50B0E9F2C9363C2604F11DDEA40E077
CAC9DF3E6A19CBC74E41E663280801D3EFD92B568AB8E5E5718EED8D4DFAF425
AE23E876D97134F4A2745C746AE1A10AC65FEFBABC8BAD1028A9E6EDDB3DDE3C
D3C3D4D6D0ADC4CABCAA01BC1AE78BE4194901E90CF68192C49773F8559789EB
EDFA9A287DBA571CA5232E6CFB6A0176E0AEC00339FF8F30D8DA913A22BE876F
BBF1B1DC44B28D1EA75B4C5673D9DA3E4F1A9D97D2980DCF62F300D7C39E212A
E7E842A920FE9898392FCCC4FF80B50C8147003725A6D77157D905E90855D834
E352BD66FC96979DB0308530FCC7BF3EF3C7CA28CB080CFFBD00EB6FD55A2A0C
CECF2F2274C11561D8B4F0F62A2AE1A5692107A5B232300EA9F0ED0460BB86A0
28252B18CD93B3742774F754D27A147B257E8639F21D6D1F334F8691B8AF86FA
2E1FAD24CFBB0A87D38CD8FE6A3A5AA37DD370381819477DE2B2B06D2F0DF6FD
00BBED05EBF34BC67219E92C3703E505972FFB5D9377152DDE9B9BC9C41E671C
874965AFB6E0D94AA93D9BD84D1BA032EDBCF39631474C581F0A3D7365147E8B
4EAE0EBAD5DC28829888EC6B7E2FF78C8C7AEE58D959841A40381E8EC8259A32
B18DA526013328C1042195674535856F9084F48E962288F0644CB732978D0109
F674D7B099575AB9C91D2FE9DC9EE074D18BF71E1B68CC55FB58F0D4DACAD5D5
B8660D7E8FE2CC9093DD3F6B7F429A0AD2A64E2ECB5F2D1F62CDBB6B4B3C90B3
C0838DA17FEA88E78BF53D11642D332444197DBE7C80663253BE556C9FE5FD98
2B97AC3E19064E3172DC25DD7D7D75A1138A149EE79D05FF579186EE5CEA1131
FE7EC3DEF39CA5736987EC772D42C12B3998E91906F0C0876CB7285F886BC1E8
853EE768998E935506577BF09E1DEC5F0B511947425B98FFBD3A4B48CCEA5DFC
66D0D1E17E3A1D0B031E0E4A4FA2C1D42788D3949E35A83DF0371ECE3224F287
3705560DAF0C0D1DA05665259A0DC2C22C749FB358D315E850AAAB565385CDA5
47B58E93ACD3E82003A7B5F5553C55A603B73930B5936CF874CB6FFA8F93D130
BDC4CADA37E9662F7C1363618CF906CE88EBEFE28B7F56D0E5B4F985581B1AF6
BC42972B27D29BB53F304559109BE31002584D02A56E7DDF8C49346B9F5ABE4B
8B4456D745F8327E1713A55743007F19874CD844DE04047142BA3C970F6A16F6
48D45F4D964D03E9D661C41F876623DB0B0E6460032A5B4C09D19D5E8906B0A1
457F567072578DCD62E737444627FA92109F3CACBBEF6279D3B1D18E016E3DB6
D3833099D6077B453BC683B8FD8F31A485FB773B65C6DCE7C7791013AF80DFC3
276D420FCAC209BBE09A8F5A581E84A9D1CDB2584519274ACCFB44D79DB243D4
D17E9CD5086D4BC080809BC88B1D42A2C77BA80B658FFE134C396F8663E4E675
DBC989018D4D825E978CFB4DFE60880D481E9205E76F2426E0CCD257AA3DB678
96FE97AE9EF9E3808079BC0BCA66EA06AA8F4AAA00DF64841B2BAFF9E7E2F175
7B752697B4B09A2B69F300D48A71B2B70661580DEBA3DB1E046D7F73F59C3986
0D6E45281DC7C43296E8A14D97085A1166BDF9959B6D52B7BF2DEECB7FB4A431
F7EA2DC9B11FF7F320D4684FACB9C8096C07712EF69EEDFB3AFFD5DCCFBDD15E
11A4F511176E0B4DD75FD43B2E0F616C61274D032C7443731C6EB683CFE8E54E
4C5938FFC0EA454A690A0B112A5DC9D1315603B111955348E914A60050CEC60C
16A2F60F014639457319431D67863D0FF562D6D5691BCDF50581F38E2A7D3A80
BB0430970AE54697813C6D01E4BEC35B710E80D1C012B01F833035FB7EA3861B
480BAACA6979912D94D6D3B45F590631E23EBCBE7FBFBC16B47F41D9533BC085
912F599106D824A953B4EFD18A9B28C5144BF2323F5FB22EAEF2BD3257A57500
18F5D9CA4B475645C293648744B0FFB7201DB3682EBED8E19E1C394E228E4036
37A01139D4AFAA606130A69F2537443E1DDCEE5CDEB647A6F2521AFCFAA0B1E4
65EC7E97EEB4F7509DD1B78E2D1B8CADD20A069A6DB10F872253FD547E725DD5
1A297AF9472A0E611700C09C3DAA579DCD4186DB74A218AA0F6DC4604D29119A
46559CF222D59418A022A0E9294E8972AFE0EFF647DD5749266710E612ACDDC1
B3F76859B026183446DC7D0514C6EF5CC7C2CD090942ECB75D7FA832B6733BAD
F7A1FAF3F9E60E4DE3B749D3EFA347E599C60B31A76E310421D44C8AD87C7575
702077410D75F4E83ABE0362F5BB19A767EC7EF8BA5AC96CE166D988C1801E6B
B2BF1F494B742D6277567163BC04D290E6DDEEDEEED817C296E4F667C832BCCB
0FE33FEBEA7DACDB8FDAC1B33B30497B8C1182DF5736564B5F413002EEC854B7
C9357D0D53F5C13578B8871910C49D27D3A91DE9897F621438707730F1CB5FA0
74D8BD8D1C12555299D095C3F27B6A83CD3C9BF34C6187A5E44FF928FECEC4BB
D3519BE7A1CF11D86FBF468608DEB9048DC94340D2EE07333A91B19053391174
9B12EC9AC4F98EB384615AC89AC4DC3C8ED73B8A7E33F0BF16C4B0E7C6B52B21
97AE9363DE7683624AA05C7332B6F54BBEABFCFF4BCE1BEFEAE22458F5A2E0A2
1C494214B80731E74F44A24AF51213467AE66F02E33D27C4D619AAF27D6D0106
F73DB7698BF55BAD4988384C231C10BCC0EF900CFE3411644B0D2AEDDC1EA796
6C0BBEF52E4E23A1363C0530152D3F9CD76A05046D6C5D7443ED672026A4893C
CF2580473E47C48F0F7E2C5685D41F3FF7F46E7B0B4E88342812FD9225B2F07B
36A572702384A6079DFDD988F59D80187A25CB3A29B409229A4FBAFAD6D99EAA
2755240600581E4F2175B586832178D8DD8A34A974CA42C0DDC396FD94477472
7E71F0B9AF5741996653BB4516B8F9A1D52BC9F8361BAE7D8F5580494C2BE08D
579383B87EBC3E6F2DA157381BA275B703092E493D94B44CF21009461704DAEF
CF7E54562D96749547A83888E000C14A209F7418F9E5EFDE5ACE61D3AF64A8EB
D83D505DCCECBEC300012B4931CF2F987285C5E7A68E6928C8F7EA8EFF8C33B4
55AD4CF998880AD1A7C2D8907C1CB21EFE9A47917ED820CCEA5F7C5EDF6BBFE0
8DCA30E372FE5FEDB0BB3E2BB618085B1AEE0730032D009B1D7C999BC17BDB79
8955FB74A2FE9C8FAE9CB64ABFDC6BECB974E0762921DF28094D09BE9FA4FD6D
2148D87E713857B0E33627BA35FDACC82B6F0F72E305982E04AD018372AFF434
52850815D90EC634586C34B917E8CDC83532D3C97BEAC55C446A5F9CE7C8EBDB
ADB6F3D146B52C876F224321FFEE68F78D71D21342E5A8FABD0351EE55A51A41
67426425E37EF0538C91F54D5CDBCE8B952DB952232252F53BC0E3B6C4560D19
E0607A6AA49B125B6C9926D3773FF7E04965A6E1C66BDCB16529F8DF61825988
71F94F142950096EF07D28F381866FC06A0FF24DA28634D73C76486B0039FBE3
FB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CMUSerifRoman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 324.4 301.67 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 6386.83 6155.59 re
f
777.668 545.586 2400 2400 re
f*
10 w
1 j
/DeviceGray {} CS
[1] SC
777.668 545.586 2400.002 2400.004 re
S
/DeviceGray {} CS
[0.4663] SC
777.668 545.586 m
3177.67 545.586 l
S
777.668 2945.59 m
3177.67 2945.59 l
S
777.668 545.586 m
777.668 2945.59 l
S
3177.67 545.586 m
3177.67 2945.59 l
S
777.668 545.586 m
3177.67 545.586 l
S
777.668 545.586 m
777.668 2945.59 l
S
777.668 545.586 m
777.668 498.086 l
S
777.668 2945.59 m
777.668 2993.92 l
S
/DeviceGray {} cs
[0.4663] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 72.2668 28.3086] Tm
0 0 Td
/F8_0 20 Tf
(0)
[10
0] Tj
Q
1299.33 545.586 m
1299.33 498.086 l
S
1299.33 2945.59 m
1299.33 2993.92 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 124.433 28.3086] Tm
0 0 Td
/F8_0 20 Tf
(5)
[10
0] Tj
Q
1821 545.586 m
1821 498.086 l
S
1821 2945.59 m
1821 2993.92 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 171.017 28.3086] Tm
0 0 Td
/F8_0 20 Tf
(10)
[10
0
10
0] Tj
Q
2342.67 545.586 m
2342.67 498.086 l
S
2342.67 2945.59 m
2342.67 2993.92 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 223.183 28.3086] Tm
0 0 Td
/F8_0 20 Tf
(15)
[10
0
10
0] Tj
Q
2864.33 545.586 m
2864.33 498.086 l
S
2864.33 2945.59 m
2864.33 2993.92 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 275.35 28.3086] Tm
0 0 Td
/F8_0 20 Tf
(20)
[10
0
10
0] Tj
Q
777.668 545.586 m
729.332 545.586 l
S
3177.67 545.586 m
3225.17 545.586 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 47.1422] Tm
0 0 Td
/F8_0 20 Tf
(200)
[10
0
10
0
10
0] Tj
Q
777.668 785.586 m
729.332 785.586 l
S
3177.67 785.586 m
3225.17 785.586 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 71.1422] Tm
0 0 Td
/F8_0 20 Tf
(300)
[10
0
10
0
10
0] Tj
Q
777.668 1025.59 m
729.332 1025.59 l
S
3177.67 1025.59 m
3225.17 1025.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 95.1422] Tm
0 0 Td
/F8_0 20 Tf
(400)
[10
0
10
0
10
0] Tj
Q
777.668 1265.59 m
729.332 1265.59 l
S
3177.67 1265.59 m
3225.17 1265.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 119.142] Tm
0 0 Td
/F8_0 20 Tf
(500)
[10
0
10
0
10
0] Tj
Q
777.668 1505.59 m
729.332 1505.59 l
S
3177.67 1505.59 m
3225.17 1505.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 143.142] Tm
0 0 Td
/F8_0 20 Tf
(600)
[10
0
10
0
10
0] Tj
Q
777.668 1745.59 m
729.332 1745.59 l
S
3177.67 1745.59 m
3225.17 1745.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 167.142] Tm
0 0 Td
/F8_0 20 Tf
(700)
[10
0
10
0
10
0] Tj
Q
777.668 1985.59 m
729.332 1985.59 l
S
3177.67 1985.59 m
3225.17 1985.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 191.142] Tm
0 0 Td
/F8_0 20 Tf
(800)
[10
0
10
0
10
0] Tj
Q
777.668 2225.59 m
729.332 2225.59 l
S
3177.67 2225.59 m
3225.17 2225.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 215.142] Tm
0 0 Td
/F8_0 20 Tf
(900)
[10
0
10
0
10
0] Tj
Q
777.668 2465.59 m
729.332 2465.59 l
S
3177.67 2465.59 m
3225.17 2465.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.6 239.142] Tm
0 0 Td
/F8_0 20 Tf
(1000)
[10
0
10
0
10
0
10
0] Tj
Q
777.668 2705.59 m
729.332 2705.59 l
S
3177.67 2705.59 m
3225.17 2705.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.6 263.142] Tm
0 0 Td
/F8_0 20 Tf
(1100)
[10
0
10
0
10
0
10
0] Tj
Q
777.668 2945.59 m
729.332 2945.59 l
S
3177.67 2945.59 m
3225.17 2945.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.6 287.142] Tm
0 0 Td
/F8_0 20 Tf
(1200)
[10
0
10
0
10
0
10
0] Tj
Q
777.668 545.586 m
3177.67 545.586 l
S
777.668 2945.59 m
3177.67 2945.59 l
S
777.668 545.586 m
777.668 2945.59 l
S
3177.67 545.586 m
3177.67 2945.59 l
S
q
811 598.922 2333.33 2360 re
W
5 w
/DeviceGray {} CS
[0.1001] SC
857.668 1468.09 m
906 1419.75 l
S
906 1468.09 m
857.668 1419.75 l
S
961.832 1534.75 m
1010.17 1486.42 l
S
1010.17 1534.75 m
961.832 1486.42 l
S
1066 1165.59 m
1114.33 1117.25 l
S
1114.33 1165.59 m
1066 1117.25 l
S
1170.17 2207.25 m
1218.5 2158.92 l
S
1218.5 2207.25 m
1170.17 2158.92 l
S
1275.17 2475.59 m
1323.5 2427.25 l
S
1323.5 2475.59 m
1275.17 2427.25 l
S
1379.33 1837.25 m
1427.67 1788.92 l
S
1427.67 1837.25 m
1379.33 1788.92 l
S
1483.5 1736.42 m
1531.83 1688.09 l
S
1531.83 1736.42 m
1483.5 1688.09 l
S
1587.67 1971.42 m
1636 1923.09 l
S
1636 1971.42 m
1587.67 1923.09 l
S
1691.83 2038.92 m
1740.17 1990.59 l
S
1740.17 2038.92 m
1691.83 1990.59 l
S
1796.83 694.754 m
1845.17 646.422 l
S
1845.17 694.754 m
1796.83 646.422 l
S
1901 2240.59 m
1949.33 2192.25 l
S
1949.33 2240.59 m
1901 2192.25 l
S
2005.17 2308.09 m
2053.5 2259.75 l
S
2053.5 2308.09 m
2005.17 2259.75 l
S
2109.33 1904.75 m
2157.67 1856.42 l
S
2157.67 1904.75 m
2109.33 1856.42 l
S
2214.33 1468.09 m
2262.67 1419.75 l
S
2262.67 1468.09 m
2214.33 1419.75 l
S
2318.5 2106.42 m
2366.83 2058.09 l
S
2366.83 2106.42 m
2318.5 2058.09 l
S
2422.67 2442.25 m
2471 2393.92 l
S
2471 2442.25 m
2422.67 2393.92 l
S
2526.83 2106.42 m
2575.17 2058.09 l
S
2575.17 2106.42 m
2526.83 2058.09 l
S
2631 1938.09 m
2679.33 1889.75 l
S
2679.33 1938.09 m
2631 1889.75 l
S
2736 1938.09 m
2784.33 1889.75 l
S
2784.33 1938.09 m
2736 1889.75 l
S
2840.17 2005.59 m
2888.5 1957.25 l
S
2888.5 2005.59 m
2840.17 1957.25 l
S
2944.33 2912.25 m
2992.67 2863.92 l
S
2992.67 2912.25 m
2944.33 2863.92 l
S
3048.5 2106.42 m
3096.83 2058.09 l
S
3096.83 2106.42 m
3048.5 2058.09 l
S
Q
/DeviceGray {} cs
[0.1999] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 93.0168 7.55859] Tm
0 0 Td
/F8_0 22 Tf
(Experimental session)
[13.442
0
11
0
11
0
9.768
0
7.326
0
6.116
0
17.116
0
9.768
0
11
0
6.116
0
9.768
0
6.116
0
5.5
0
8.558
0
9.768
0
8.558
0
8.558
0
6.116
0
11
0
11
0] Tj
[0 1 -1 0 16.1 42.8922] Tm
0 0 Td
/F8_0 22 Tf
(Number of trials completed)
[15.884
0
11
0
17.116
0
11
0
9.768
0
7.326
0
5.5
0
11
0
7.326
0
5.5
0
6.116
0
7.326
0
6.116
0
9.768
0
6.116
0
8.558
0
5.5
0
9.768
0
11
0
17.116
0
11
0
6.116
0
9.768
0
6.116
0
9.768
0
11
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMUSerifRoman
%%EOF
