%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.33.0 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Linux 4.2.0-42-lowlatency #49-Ubuntu SMP PREEMPT Tue Jun 28 23:12:17 UTC 2016 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 325 302
%%HiResBoundingBox: 0 0 324.4 301.67
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMUSerifRoman
%!FontType1-1.0: CMUSerifRoman
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2006 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2006 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman Regular) readonly def
/FamilyName (Nimbus Roman) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMUSerifRoman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -217 775 688] readonly def
/StrokeWidth 0 def
/UniqueID 5082812 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 69 /E put
dup 78 /N put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F88E0E90C57EC003CFF45554C63978A4457910ACCCBDB199AE01D3A5CC868F4B
822F86C8BEBF268A62A74B74B7BB3BB731E3098EBB936E540471387BC93EBC24
731A8FD551B73BB61F5470D5B804CCE0D897C3F8651422B30EBF8D82BF962DDA
BF33C897A6ACD27770FAA07EB13C67191297413C15F11F22612AB3189B5B27D9
5F8A0A4724E98A018EABBEEE4BF0F4D8E1F282C280B5735411CB2C6626302A4C
21E1D370912CDF61ED23E57916DE9C02A00E3C4B30F957F526C3FAD461933B6E
FA765140C78EF120DDAE516DBB599526395BC827996B5FA9E044FD63F3A3B6DB
47173DCF71DA1E9B09EBF5BDCADA1FC7BE9B91B54F75B5B8EE729C403914B806
31DED09E6B8ECFBD1DEFB1953ECB1E41C94C45CC9BFD50F537892C97CB977328
E9BA77E790AD06D77A20313F86A43F47EBAD6AE4BE8E88E9187815EA29C30EDD
BB6181FCEDE93640D1F366BAF8AF9563B1048CE7D51149924EE25EF61DC7ED76
49FE17653E048C2A4316E9106AC1D1AEFAA10920C27E5FD1BCDE86FAFB2E1E19
E7769C739BD4ABECECEF8F203CCCD799B1A6987CF583AEFE6FB1B4311F3B0E5C
96F7477227637903ECC3F50253EB815E97E49DB4A08BAF0B79DE721B9C396822
CC2E968A9F0D11A45D17963C7638B3D53595BE5ED6206015FFDAB15C20F81FEB
1B7287023B2BB5FEF29597886164FDF750368099D31F170B4265C3D9BDAF54D6
1D2EBC9051CD1CBF8C9771DD55FB163690BF69356C377EE51866332C5E821617
ACA86BD32D9282A06D8AADED794347FFAABFE0957C62A079F36296F7C91380C0
FB74C068FB8CF695553F15C1FE45C5FAEFDBF10EBA9D0EFB3B55558EBE4B15A1
DC393A48A20FCC8A03962C28E3AB7D4A019C5E330C11854AEE2B231CE96D23C1
D68F62042B2A079251DB7BB344CBAB9A34FCD5D3C5015CAB2C25696E700A6C2A
C60D9C32DDF198B09C14141C32131E5C3CD016FDC7EC557B511CE136431C71C2
4465A8613964594D2B77B465BD531EBD094912B133F4F0667BE9415AF75076C1
994B631C869882DAE5A7B0F8D34F34CF09564220E856246ABB4D33BF7DD29213
5391F2C8C9705D1AA2AADE68FE6608F60A74CC06AEE0899A4B9FA93F6D9F8106
869E80D1DA0A8F79AF9911C662FA86246D9855C67E875C2D06AE1571A8F68CCD
7702EFD40E2AA1A1BB60B832E5F067FDE6E499EB9CA5D9A29BD020C4E6EB1B07
CCA48B3C92BEDF73E8FCBB0342E9FF23A6371F623CBE77361FA1599844A1DC64
DDE17F809F68C5603E4289F3FBB3D0A9CA7E0CF5B8413940C02D4C1655155F45
C4B08509E9B8E0698B1ACFFFBF2EF9831F42CE1C83F87267831B307AA3D19267
40C06B387004479F27C9E22493FDA310CA37539424CDC3C3E114E6997688E739
F7EA2CCED2275DC087B734265311A7F328D9434DB47AC9C4BED9A7E39E0C2266
7BA8CB1F3B5A739990BCEDC199D4BAAB3111BC4B6CC6DC324305A77C9F7AEE0A
5F5E1B0B5CF99CF170AC8C7617831D6CF610AFAD88DE52D6546F4F97059047C1
E7421D73422404351AA138EFCEE7EADF51293919A707039BD2E994B31B069232
F716614603DB830DD0FE7CCC13E7676AB3A54FB40A977AC307C849390EB74C32
7F1BBCEE1975369DE96A140247FAAF7736E80A8C37EBA5BDBEE985340FF8584A
439E9BCAD2655EB146AF7E457B45434CCA0063E6A00459F9BF9DE2B90CB4384C
B197A37D83213A66736CA61ADCCCA71CFE7B0C4ED69AC270ECD40F33F6C44301
287215B721E407631C77DCFA551FA9FEDE65A1228591D66435C67B557376E6A6
C360D5CBE4941E9E36415067E48828DE81C3C86E9FABFF4B5FF2716CFF67F1C3
367FC29D415136B8242F0D6A457F67C1CAB1158964A169A4625F4079893BC3D7
EE6A91FEDF273223A2BA3714C7C79379DE33F823FDBD0B000E4994A99C08DB74
1B831AD409AE9A5916836D88B971C42901D6E8DEBDD088083409AA72EFFE264B
0A8C87E214E1DC12D71C405EE3B940E82DF7C2A89F31246DC80830FF07D8C565
0DAA52199CBAE9FDE513BEE4A58790C9907BD502ACEE89BDFBED756B88350617
42A448395BD302EE5CCFB982630583ACCFCFB8B2289D930093047C9234B49633
EF528330EF77081EAA5A9F937F3A1D5C8ABDE01D210D8B35AB1D3E6DCBB04792
823FAF91667960D0F745E0E1055B3166329E323AAED3BA3CB225EDB4844880AD
22F4C1FE7596CF9891DEE98BDE176743232CA972E13195FC25764A2014F3FDA0
747D9CC1F31AE6A1F7CCB92588FAB0ABFE0CF8D83B72A2674876611F00281204
35FB97947D19813EC64B05884F44EDC12AC1B099BF3CE77886A67BB7FF0969D5
64D6B64941FCDBB3679A42DB84910AE637524453931D0A60F5C5368CD2EFB8AD
AA7A64A46680D63F09530A3BEC877E5D82BB9E0570AD8D765C30564321FF69EB
ED4850BF2B46B710C0DBF915EE4C7EABA6D7D8F6D2658FC5E7858DCBEB38CA30
4FD92E0AA9E53FA20140C93A334F648B794B02A7DF5BBBF88E817C19F039409C
84B2F1AFAA90517D1427F84273736F6DB1E56822FF7782D070199AA6E6F543FC
F0DA4644A7BC53957EFA5E4A115C25F91286D3895A004378E4CDE25958A37C4D
C4416BB2A4E6F5D415494D46CC21777D3F73EDAE799BA0E84DC3AAB6D4E4AC6A
A50116005F90BA8B578DCF59EAA6F8326250DEC231E19FB903228679F9B3B9A3
1B17E1E69C8CF9DA5C762E9B263330B6CFC4A001B739C2395E6933E945FEF6F0
2BEA421ABFA234C26C9810051ED38989EF852A7937D23D22438C0714DD89E1E8
91E39BBBC18C39B007EC40523ADDD00C758DD9F1987EC62AEF87995EFA8E1F93
40E2FCDD9537003EC66D3B3AF8BF8BA4A263D8B891CE6BDAAB25A2846E22BB4C
D62D04F4A94A2D054597B865B2D08B2B74F9045DACCFCAE76D591D813AB73806
8E1911A9FC2FD10FEDECB9EAC191FA9894BA2F29D9D808D721080E49EEBA54C1
446339EE552CA25755218BFA11BA9F0EB045FE89BD48587D9CAE04146780EB30
CE1FB715156A383ED1543627508153C366CE55DA89E342B93A182475C8400706
BF4AD911F632D43211BD05D234DDCCFC57C72FD6A4389E772090E9A3682515AD
D857A741A871BDBA09BC3C8CA4625A79BF988CA9DA4C353047209D64473A7CB8
CF9CC44F5FF0E3A188A1FC41A267DDCD65A389F9A0D8E031512CD391146E0FAC
992A99EF87A17825A936EEE452FA9698593721892BA774C5DC867DFBCBBE2EE7
A00E6EB580BEBCC85247888DA33DAC4977AE45EEA3AF80EFC3151D456CEF8037
0FACE56CABCC795D434F9F04F4D627361BCC52102C2FAC714614E0F4884402E8
42A708BD62EFA57374BE47AD79F18C9262C7976B350ECD251116B23831771CAB
127AB1F65971D397BD14BF902AF434B4545349FCD6B4929389FDF9B703B340CE
987B61E1DD3094DA2702443D42AB7421E5EA63F1CA7622544DD377F402F2A424
047D87DAF40D52A8E814D8A3DF6FA9C4886B8D306CC2DEFD646DE0810E1B4690
5A5FAB5E039F64DA9C625167DE9C67C3169C278745CC08266EB528FDEC91C401
D28495D77A571C77D5F74D3D1A9D885B3AEE051D1C528E037B78856989158826
F737D807ABBD733DF5DD6663EB8241594524CF413F139D0D5BF79C2807B66484
BF9A89600E062527040D5F8FD2E02DDE5EE51D07111AC6A16D407D704F7B0FA3
A0EAEE92B585EF020129FC3771B2F567F7D0D8BD65DF3659BD082FA5F4CA829A
2FC9C912B92FE0DC731ADC88BEBC83BBF5FCC75DCFB2367DAB742B462D681D58
7639FA71D363EDC92D3446543918EE95618B4C6784047813D843FFB45E9F5A6C
8A66CADE37E0FB6C72B1EF7326A60245263A5B126CEB32262F1C1633511D9BEC
2683DB0AB3927E4B2DA9CF6236D3BEA112A80E7B7A8DAACFE290879D7F8805A4
059C28B6EC515730EEE8B8FC63B9AA9786818E3EF3E61FFF181DCBFD3B1F33C5
C95A2F00033E6166FD31FE1E0296F79E838582E67CA111B68C4AEB03F28D6174
A1782DBC6E608FFB99FF48528735E2625A02B35CC49982A1CD99A02132FE7A26
ACD360E608B2120AB86BA945790FABE7C1F744C346C95F21AB5B3CC322E5C56C
CDB78E8BEF76C58682A70FFDD2EB7FE8518D351DCC14D11E50A171476B43A5CF
0F2DE41144CD7EC058CBE02954A9AFE533CFF9CB8428E54E990A3AAD39B2471F
F9E00DA71E2A02B2A6B97D393B4344D7D5E5751CDB0502E55516CC1D115BA280
73CC7E811BA075C371B85F9163E7FE1D9A55B25C9F3D60BD3CD21B3CD1ABE70A
C6557779DB45533683F57A32BA695B1696C1A7D0005393EBDAC8B4B5C6B9C85F
270F0FDDF7CF96537538240822B5EFB1A4D2D2E740B34E6593033DB2B5CB2367
89197BBF45D62BE2DC1988665F98E20F329AB20B8A017B6FAA9620E045ACDC48
69CA3A2F440D427F686E1476CC278C3AC178A2B1240A50C26F451A13C230F158
8579D8709EC50878A1B229DEAB0DB8315224F8236E77E8648DBA82980EE3C96D
3531967A5F11262E87CC952FA01D7BB6D16C836C4F82292FDAB719DA0D237D5F
E4F0BDE0DBE90AA4A93B9538AD6753D2EBAE14D195D5DB98EFAEFF6791820D1E
0951A19FA9E6FDF4D650B5E64FC3F1039D2A463E42A138F510F8F4AB990D70AA
741292D7375356F47FA697E0CF9D9BBB027FD1F4E3D62B5BEE7150821D45AABD
2B80D99A36A8D7DDEC3CD5DCFBD8E50AFA81B856ABAD126D610667AEFE7429C0
16D8818347E9025D246745BF8882A4D83F3C173D55AA3BADDA65D4FCBB6D5C93
2795A609018BC28D097251BC89726DC30E11E72EDA4521224225D11DDCD5758B
921584B24178C931E6299FF1BBF4C11F515271471AF9DEEF5B8E4DBE726A618F
E9DA7293EA7D4AAAC0DB24DD0FDBAA306B49FED310603CBD7D43DDD335EBBBF7
86A67F02E1BAF385D0039ABDAD87C0A5E150E2F4E552135A3723F8C4AE267F58
7EAAC866D63F2C768759E40AB69BB1A5D44A96BE0BE8DA918A852F7D10618BE0
61FD6AD5C55C7B71D009F70B9E73965EAF7A8A6E137605B021A61981AB6CDBA8
0062C5E8F9F54D0A718F05C72B8A24166C9DBF51E23BF9E7313AA234BDAF825C
7E633DD50B45AA8F585714518BF830C38EFA2B7F591DBE593FB9DA230E13E31F
4E5F57B04379F7125EF19F892AED1E2D2711B065E1E705F3A96C74621C730150
1A53B5F2BFAAECFE0EECC580ADD685D81D1F6BA2AC067F78CC8914D2BAA2DEDE
AFA83349BB4EF0CB6A43809DE1A299D1D8A7C30612C3AD7DC1E93D8DF956F2AF
37278750617BE6C3E7E7286A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CMUSerifRoman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 324.4 301.67 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 6386.83 6155.59 re
f
777.668 545.586 2400 2400.84 re
f*
10 w
1 j
/DeviceGray {} CS
[1] SC
777.668 545.586 2400.002 2400.834 re
S
/DeviceGray {} CS
[0.4663] SC
777.668 545.586 m
3177.67 545.586 l
S
777.668 2946.42 m
3177.67 2946.42 l
S
777.668 545.586 m
777.668 2946.42 l
S
3177.67 545.586 m
3177.67 2946.42 l
S
777.668 545.586 m
3177.67 545.586 l
S
777.668 545.586 m
777.668 2946.42 l
S
777.668 545.586 m
777.668 498.086 l
S
777.668 2945.59 m
777.668 2993.92 l
S
/DeviceGray {} cs
[0.4663] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 72.2668 28.3086] Tm
0 0 Td
/F8_0 20 Tf
(0)
[10
0] Tj
Q
1444.33 545.586 m
1444.33 498.086 l
S
1444.33 2945.59 m
1444.33 2993.92 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 138.933 28.3086] Tm
0 0 Td
/F8_0 20 Tf
(5)
[10
0] Tj
Q
2111 545.586 m
2111 498.086 l
S
2111 2945.59 m
2111 2993.92 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 200.017 28.3086] Tm
0 0 Td
/F8_0 20 Tf
(10)
[10
0
10
0] Tj
Q
2777.67 545.586 m
2777.67 498.086 l
S
2777.67 2945.59 m
2777.67 2993.92 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 266.683 28.3086] Tm
0 0 Td
/F8_0 20 Tf
(15)
[10
0
10
0] Tj
Q
777.668 545.586 m
729.332 545.586 l
S
3177.67 545.586 m
3225.17 545.586 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 58.9332 47.1422] Tm
0 0 Td
/F8_0 20 Tf
(0)
[10
0] Tj
Q
777.668 945.586 m
729.332 945.586 l
S
3177.67 945.586 m
3225.17 945.586 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 87.1422] Tm
0 0 Td
/F8_0 20 Tf
(200)
[10
0
10
0
10
0] Tj
Q
777.668 1345.59 m
729.332 1345.59 l
S
3177.67 1345.59 m
3225.17 1345.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 127.142] Tm
0 0 Td
/F8_0 20 Tf
(400)
[10
0
10
0
10
0] Tj
Q
777.668 1745.59 m
729.332 1745.59 l
S
3177.67 1745.59 m
3225.17 1745.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 167.142] Tm
0 0 Td
/F8_0 20 Tf
(600)
[10
0
10
0
10
0] Tj
Q
777.668 2145.59 m
729.332 2145.59 l
S
3177.67 2145.59 m
3225.17 2145.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.6832 207.142] Tm
0 0 Td
/F8_0 20 Tf
(800)
[10
0
10
0
10
0] Tj
Q
777.668 2545.59 m
729.332 2545.59 l
S
3177.67 2545.59 m
3225.17 2545.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.6 247.142] Tm
0 0 Td
/F8_0 20 Tf
(1000)
[10
0
10
0
10
0
10
0] Tj
Q
777.668 2945.59 m
729.332 2945.59 l
S
3177.67 2945.59 m
3225.17 2945.59 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.6 287.142] Tm
0 0 Td
/F8_0 20 Tf
(1200)
[10
0
10
0
10
0
10
0] Tj
Q
777.668 545.586 m
3177.67 545.586 l
S
777.668 2946.42 m
3177.67 2946.42 l
S
777.668 545.586 m
777.668 2946.42 l
S
3177.67 545.586 m
3177.67 2946.42 l
S
q
840.168 810.586 2275.83 2186.67 re
W
5 w
/DeviceGray {} CS
[0.1001] SC
886.832 2082.25 m
935.168 2033.92 l
S
935.168 2082.25 m
886.832 2033.92 l
S
1020.17 906.422 m
1068.5 858.086 l
S
1068.5 906.422 m
1020.17 858.086 l
S
1153.5 1046.42 m
1201.83 998.086 l
S
1201.83 1046.42 m
1153.5 998.086 l
S
1286.83 1998.09 m
1335.17 1949.75 l
S
1335.17 1998.09 m
1286.83 1949.75 l
S
1420.17 1942.25 m
1468.5 1893.92 l
S
1468.5 1942.25 m
1420.17 1893.92 l
S
1553.5 2642.25 m
1601.83 2593.92 l
S
1601.83 2642.25 m
1553.5 2593.92 l
S
1686.83 2082.25 m
1735.17 2033.92 l
S
1735.17 2082.25 m
1686.83 2033.92 l
S
1820.17 2558.09 m
1868.5 2509.75 l
S
1868.5 2558.09 m
1820.17 2509.75 l
S
1953.5 2502.25 m
2001.83 2453.92 l
S
2001.83 2502.25 m
1953.5 2453.92 l
S
2086.83 989.754 m
2135.17 941.422 l
S
2135.17 989.754 m
2086.83 941.422 l
S
2220.17 1773.92 m
2268.5 1725.59 l
S
2268.5 1773.92 m
2220.17 1725.59 l
S
2353.5 2109.75 m
2401.83 2061.42 l
S
2401.83 2109.75 m
2353.5 2061.42 l
S
2486.83 1942.25 m
2535.17 1893.92 l
S
2535.17 1942.25 m
2486.83 1893.92 l
S
2620.17 1269.75 m
2668.5 1221.42 l
S
2668.5 1269.75 m
2620.17 1221.42 l
S
2753.5 1493.92 m
2801.83 1445.59 l
S
2801.83 1493.92 m
2753.5 1445.59 l
S
2886.83 2082.25 m
2935.17 2033.92 l
S
2935.17 2082.25 m
2886.83 2033.92 l
S
3020.17 2950.59 m
3068.5 2902.25 l
S
3068.5 2950.59 m
3020.17 2902.25 l
S
Q
/DeviceGray {} cs
[0.1999] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 93.0168 7.55859] Tm
0 0 Td
/F8_0 22 Tf
(Experimental session)
[13.442
0
11
0
11
0
9.768
0
7.326
0
6.116
0
17.116
0
9.768
0
11
0
6.116
0
9.768
0
6.116
0
5.5
0
8.558
0
9.768
0
8.558
0
8.558
0
6.116
0
11
0
11
0] Tj
[0 1 -1 0 16.1 42.8922] Tm
0 0 Td
/F8_0 22 Tf
(Number of trials completed)
[15.884
0
11
0
17.116
0
11
0
9.768
0
7.326
0
5.5
0
11
0
7.326
0
5.5
0
6.116
0
7.326
0
6.116
0
9.768
0
6.116
0
8.558
0
5.5
0
9.768
0
11
0
17.116
0
11
0
6.116
0
9.768
0
6.116
0
9.768
0
11
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMUSerifRoman
%%EOF
